// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: channel-status.proto

#ifndef PROTOBUF_channel_2dstatus_2eproto__INCLUDED
#define PROTOBUF_channel_2dstatus_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ndn_message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_channel_2dstatus_2eproto();
void protobuf_AssignDesc_channel_2dstatus_2eproto();
void protobuf_ShutdownFile_channel_2dstatus_2eproto();

class ChannelStatusMessage;
class ChannelStatusMessage_ChannelStatus;

// ===================================================================

class ChannelStatusMessage_ChannelStatus : public ::google::protobuf::Message {
 public:
  ChannelStatusMessage_ChannelStatus();
  virtual ~ChannelStatusMessage_ChannelStatus();

  ChannelStatusMessage_ChannelStatus(const ChannelStatusMessage_ChannelStatus& from);

  inline ChannelStatusMessage_ChannelStatus& operator=(const ChannelStatusMessage_ChannelStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChannelStatusMessage_ChannelStatus& default_instance();

  void Swap(ChannelStatusMessage_ChannelStatus* other);

  // implements Message ----------------------------------------------

  ChannelStatusMessage_ChannelStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChannelStatusMessage_ChannelStatus& from);
  void MergeFrom(const ChannelStatusMessage_ChannelStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string local_uri = 129;
  inline bool has_local_uri() const;
  inline void clear_local_uri();
  static const int kLocalUriFieldNumber = 129;
  inline const ::std::string& local_uri() const;
  inline void set_local_uri(const ::std::string& value);
  inline void set_local_uri(const char* value);
  inline void set_local_uri(const char* value, size_t size);
  inline ::std::string* mutable_local_uri();
  inline ::std::string* release_local_uri();
  inline void set_allocated_local_uri(::std::string* local_uri);

  // @@protoc_insertion_point(class_scope:ndn_message.ChannelStatusMessage.ChannelStatus)
 private:
  inline void set_has_local_uri();
  inline void clear_has_local_uri();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* local_uri_;
  friend void  protobuf_AddDesc_channel_2dstatus_2eproto();
  friend void protobuf_AssignDesc_channel_2dstatus_2eproto();
  friend void protobuf_ShutdownFile_channel_2dstatus_2eproto();

  void InitAsDefaultInstance();
  static ChannelStatusMessage_ChannelStatus* default_instance_;
};
// -------------------------------------------------------------------

class ChannelStatusMessage : public ::google::protobuf::Message {
 public:
  ChannelStatusMessage();
  virtual ~ChannelStatusMessage();

  ChannelStatusMessage(const ChannelStatusMessage& from);

  inline ChannelStatusMessage& operator=(const ChannelStatusMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChannelStatusMessage& default_instance();

  void Swap(ChannelStatusMessage* other);

  // implements Message ----------------------------------------------

  ChannelStatusMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChannelStatusMessage& from);
  void MergeFrom(const ChannelStatusMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ChannelStatusMessage_ChannelStatus ChannelStatus;

  // accessors -------------------------------------------------------

  // repeated .ndn_message.ChannelStatusMessage.ChannelStatus channel_status = 130;
  inline int channel_status_size() const;
  inline void clear_channel_status();
  static const int kChannelStatusFieldNumber = 130;
  inline const ::ndn_message::ChannelStatusMessage_ChannelStatus& channel_status(int index) const;
  inline ::ndn_message::ChannelStatusMessage_ChannelStatus* mutable_channel_status(int index);
  inline ::ndn_message::ChannelStatusMessage_ChannelStatus* add_channel_status();
  inline const ::google::protobuf::RepeatedPtrField< ::ndn_message::ChannelStatusMessage_ChannelStatus >&
      channel_status() const;
  inline ::google::protobuf::RepeatedPtrField< ::ndn_message::ChannelStatusMessage_ChannelStatus >*
      mutable_channel_status();

  // @@protoc_insertion_point(class_scope:ndn_message.ChannelStatusMessage)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ndn_message::ChannelStatusMessage_ChannelStatus > channel_status_;
  friend void  protobuf_AddDesc_channel_2dstatus_2eproto();
  friend void protobuf_AssignDesc_channel_2dstatus_2eproto();
  friend void protobuf_ShutdownFile_channel_2dstatus_2eproto();

  void InitAsDefaultInstance();
  static ChannelStatusMessage* default_instance_;
};
// ===================================================================


// ===================================================================

// ChannelStatusMessage_ChannelStatus

// required string local_uri = 129;
inline bool ChannelStatusMessage_ChannelStatus::has_local_uri() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChannelStatusMessage_ChannelStatus::set_has_local_uri() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChannelStatusMessage_ChannelStatus::clear_has_local_uri() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChannelStatusMessage_ChannelStatus::clear_local_uri() {
  if (local_uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    local_uri_->clear();
  }
  clear_has_local_uri();
}
inline const ::std::string& ChannelStatusMessage_ChannelStatus::local_uri() const {
  // @@protoc_insertion_point(field_get:ndn_message.ChannelStatusMessage.ChannelStatus.local_uri)
  return *local_uri_;
}
inline void ChannelStatusMessage_ChannelStatus::set_local_uri(const ::std::string& value) {
  set_has_local_uri();
  if (local_uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    local_uri_ = new ::std::string;
  }
  local_uri_->assign(value);
  // @@protoc_insertion_point(field_set:ndn_message.ChannelStatusMessage.ChannelStatus.local_uri)
}
inline void ChannelStatusMessage_ChannelStatus::set_local_uri(const char* value) {
  set_has_local_uri();
  if (local_uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    local_uri_ = new ::std::string;
  }
  local_uri_->assign(value);
  // @@protoc_insertion_point(field_set_char:ndn_message.ChannelStatusMessage.ChannelStatus.local_uri)
}
inline void ChannelStatusMessage_ChannelStatus::set_local_uri(const char* value, size_t size) {
  set_has_local_uri();
  if (local_uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    local_uri_ = new ::std::string;
  }
  local_uri_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ndn_message.ChannelStatusMessage.ChannelStatus.local_uri)
}
inline ::std::string* ChannelStatusMessage_ChannelStatus::mutable_local_uri() {
  set_has_local_uri();
  if (local_uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    local_uri_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ndn_message.ChannelStatusMessage.ChannelStatus.local_uri)
  return local_uri_;
}
inline ::std::string* ChannelStatusMessage_ChannelStatus::release_local_uri() {
  clear_has_local_uri();
  if (local_uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = local_uri_;
    local_uri_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ChannelStatusMessage_ChannelStatus::set_allocated_local_uri(::std::string* local_uri) {
  if (local_uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete local_uri_;
  }
  if (local_uri) {
    set_has_local_uri();
    local_uri_ = local_uri;
  } else {
    clear_has_local_uri();
    local_uri_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ndn_message.ChannelStatusMessage.ChannelStatus.local_uri)
}

// -------------------------------------------------------------------

// ChannelStatusMessage

// repeated .ndn_message.ChannelStatusMessage.ChannelStatus channel_status = 130;
inline int ChannelStatusMessage::channel_status_size() const {
  return channel_status_.size();
}
inline void ChannelStatusMessage::clear_channel_status() {
  channel_status_.Clear();
}
inline const ::ndn_message::ChannelStatusMessage_ChannelStatus& ChannelStatusMessage::channel_status(int index) const {
  // @@protoc_insertion_point(field_get:ndn_message.ChannelStatusMessage.channel_status)
  return channel_status_.Get(index);
}
inline ::ndn_message::ChannelStatusMessage_ChannelStatus* ChannelStatusMessage::mutable_channel_status(int index) {
  // @@protoc_insertion_point(field_mutable:ndn_message.ChannelStatusMessage.channel_status)
  return channel_status_.Mutable(index);
}
inline ::ndn_message::ChannelStatusMessage_ChannelStatus* ChannelStatusMessage::add_channel_status() {
  // @@protoc_insertion_point(field_add:ndn_message.ChannelStatusMessage.channel_status)
  return channel_status_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ndn_message::ChannelStatusMessage_ChannelStatus >&
ChannelStatusMessage::channel_status() const {
  // @@protoc_insertion_point(field_list:ndn_message.ChannelStatusMessage.channel_status)
  return channel_status_;
}
inline ::google::protobuf::RepeatedPtrField< ::ndn_message::ChannelStatusMessage_ChannelStatus >*
ChannelStatusMessage::mutable_channel_status() {
  // @@protoc_insertion_point(field_mutable_list:ndn_message.ChannelStatusMessage.channel_status)
  return &channel_status_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ndn_message

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_channel_2dstatus_2eproto__INCLUDED
