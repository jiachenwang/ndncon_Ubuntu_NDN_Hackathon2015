// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: face-status.proto

#ifndef PROTOBUF_face_2dstatus_2eproto__INCLUDED
#define PROTOBUF_face_2dstatus_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ndn_message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_face_2dstatus_2eproto();
void protobuf_AssignDesc_face_2dstatus_2eproto();
void protobuf_ShutdownFile_face_2dstatus_2eproto();

class FaceStatusMessage;
class FaceStatusMessage_FaceStatus;

// ===================================================================

class FaceStatusMessage_FaceStatus : public ::google::protobuf::Message {
 public:
  FaceStatusMessage_FaceStatus();
  virtual ~FaceStatusMessage_FaceStatus();

  FaceStatusMessage_FaceStatus(const FaceStatusMessage_FaceStatus& from);

  inline FaceStatusMessage_FaceStatus& operator=(const FaceStatusMessage_FaceStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FaceStatusMessage_FaceStatus& default_instance();

  void Swap(FaceStatusMessage_FaceStatus* other);

  // implements Message ----------------------------------------------

  FaceStatusMessage_FaceStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FaceStatusMessage_FaceStatus& from);
  void MergeFrom(const FaceStatusMessage_FaceStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 face_id = 105;
  inline bool has_face_id() const;
  inline void clear_face_id();
  static const int kFaceIdFieldNumber = 105;
  inline ::google::protobuf::uint64 face_id() const;
  inline void set_face_id(::google::protobuf::uint64 value);

  // required string uri = 114;
  inline bool has_uri() const;
  inline void clear_uri();
  static const int kUriFieldNumber = 114;
  inline const ::std::string& uri() const;
  inline void set_uri(const ::std::string& value);
  inline void set_uri(const char* value);
  inline void set_uri(const char* value, size_t size);
  inline ::std::string* mutable_uri();
  inline ::std::string* release_uri();
  inline void set_allocated_uri(::std::string* uri);

  // required string local_uri = 129;
  inline bool has_local_uri() const;
  inline void clear_local_uri();
  static const int kLocalUriFieldNumber = 129;
  inline const ::std::string& local_uri() const;
  inline void set_local_uri(const ::std::string& value);
  inline void set_local_uri(const char* value);
  inline void set_local_uri(const char* value, size_t size);
  inline ::std::string* mutable_local_uri();
  inline ::std::string* release_local_uri();
  inline void set_allocated_local_uri(::std::string* local_uri);

  // optional uint64 expiration_period = 109;
  inline bool has_expiration_period() const;
  inline void clear_expiration_period();
  static const int kExpirationPeriodFieldNumber = 109;
  inline ::google::protobuf::uint64 expiration_period() const;
  inline void set_expiration_period(::google::protobuf::uint64 value);

  // required uint64 face_scope = 132;
  inline bool has_face_scope() const;
  inline void clear_face_scope();
  static const int kFaceScopeFieldNumber = 132;
  inline ::google::protobuf::uint64 face_scope() const;
  inline void set_face_scope(::google::protobuf::uint64 value);

  // required uint64 face_persistency = 133;
  inline bool has_face_persistency() const;
  inline void clear_face_persistency();
  static const int kFacePersistencyFieldNumber = 133;
  inline ::google::protobuf::uint64 face_persistency() const;
  inline void set_face_persistency(::google::protobuf::uint64 value);

  // required uint64 link_type = 134;
  inline bool has_link_type() const;
  inline void clear_link_type();
  static const int kLinkTypeFieldNumber = 134;
  inline ::google::protobuf::uint64 link_type() const;
  inline void set_link_type(::google::protobuf::uint64 value);

  // required uint64 n_in_interests = 144;
  inline bool has_n_in_interests() const;
  inline void clear_n_in_interests();
  static const int kNInInterestsFieldNumber = 144;
  inline ::google::protobuf::uint64 n_in_interests() const;
  inline void set_n_in_interests(::google::protobuf::uint64 value);

  // required uint64 n_in_datas = 145;
  inline bool has_n_in_datas() const;
  inline void clear_n_in_datas();
  static const int kNInDatasFieldNumber = 145;
  inline ::google::protobuf::uint64 n_in_datas() const;
  inline void set_n_in_datas(::google::protobuf::uint64 value);

  // required uint64 n_out_interests = 146;
  inline bool has_n_out_interests() const;
  inline void clear_n_out_interests();
  static const int kNOutInterestsFieldNumber = 146;
  inline ::google::protobuf::uint64 n_out_interests() const;
  inline void set_n_out_interests(::google::protobuf::uint64 value);

  // required uint64 n_out_datas = 147;
  inline bool has_n_out_datas() const;
  inline void clear_n_out_datas();
  static const int kNOutDatasFieldNumber = 147;
  inline ::google::protobuf::uint64 n_out_datas() const;
  inline void set_n_out_datas(::google::protobuf::uint64 value);

  // required uint64 n_in_bytes = 148;
  inline bool has_n_in_bytes() const;
  inline void clear_n_in_bytes();
  static const int kNInBytesFieldNumber = 148;
  inline ::google::protobuf::uint64 n_in_bytes() const;
  inline void set_n_in_bytes(::google::protobuf::uint64 value);

  // required uint64 n_out_bytes = 149;
  inline bool has_n_out_bytes() const;
  inline void clear_n_out_bytes();
  static const int kNOutBytesFieldNumber = 149;
  inline ::google::protobuf::uint64 n_out_bytes() const;
  inline void set_n_out_bytes(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ndn_message.FaceStatusMessage.FaceStatus)
 private:
  inline void set_has_face_id();
  inline void clear_has_face_id();
  inline void set_has_uri();
  inline void clear_has_uri();
  inline void set_has_local_uri();
  inline void clear_has_local_uri();
  inline void set_has_expiration_period();
  inline void clear_has_expiration_period();
  inline void set_has_face_scope();
  inline void clear_has_face_scope();
  inline void set_has_face_persistency();
  inline void clear_has_face_persistency();
  inline void set_has_link_type();
  inline void clear_has_link_type();
  inline void set_has_n_in_interests();
  inline void clear_has_n_in_interests();
  inline void set_has_n_in_datas();
  inline void clear_has_n_in_datas();
  inline void set_has_n_out_interests();
  inline void clear_has_n_out_interests();
  inline void set_has_n_out_datas();
  inline void clear_has_n_out_datas();
  inline void set_has_n_in_bytes();
  inline void clear_has_n_in_bytes();
  inline void set_has_n_out_bytes();
  inline void clear_has_n_out_bytes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 face_id_;
  ::std::string* uri_;
  ::std::string* local_uri_;
  ::google::protobuf::uint64 expiration_period_;
  ::google::protobuf::uint64 face_scope_;
  ::google::protobuf::uint64 face_persistency_;
  ::google::protobuf::uint64 link_type_;
  ::google::protobuf::uint64 n_in_interests_;
  ::google::protobuf::uint64 n_in_datas_;
  ::google::protobuf::uint64 n_out_interests_;
  ::google::protobuf::uint64 n_out_datas_;
  ::google::protobuf::uint64 n_in_bytes_;
  ::google::protobuf::uint64 n_out_bytes_;
  friend void  protobuf_AddDesc_face_2dstatus_2eproto();
  friend void protobuf_AssignDesc_face_2dstatus_2eproto();
  friend void protobuf_ShutdownFile_face_2dstatus_2eproto();

  void InitAsDefaultInstance();
  static FaceStatusMessage_FaceStatus* default_instance_;
};
// -------------------------------------------------------------------

class FaceStatusMessage : public ::google::protobuf::Message {
 public:
  FaceStatusMessage();
  virtual ~FaceStatusMessage();

  FaceStatusMessage(const FaceStatusMessage& from);

  inline FaceStatusMessage& operator=(const FaceStatusMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FaceStatusMessage& default_instance();

  void Swap(FaceStatusMessage* other);

  // implements Message ----------------------------------------------

  FaceStatusMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FaceStatusMessage& from);
  void MergeFrom(const FaceStatusMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef FaceStatusMessage_FaceStatus FaceStatus;

  // accessors -------------------------------------------------------

  // repeated .ndn_message.FaceStatusMessage.FaceStatus face_status = 128;
  inline int face_status_size() const;
  inline void clear_face_status();
  static const int kFaceStatusFieldNumber = 128;
  inline const ::ndn_message::FaceStatusMessage_FaceStatus& face_status(int index) const;
  inline ::ndn_message::FaceStatusMessage_FaceStatus* mutable_face_status(int index);
  inline ::ndn_message::FaceStatusMessage_FaceStatus* add_face_status();
  inline const ::google::protobuf::RepeatedPtrField< ::ndn_message::FaceStatusMessage_FaceStatus >&
      face_status() const;
  inline ::google::protobuf::RepeatedPtrField< ::ndn_message::FaceStatusMessage_FaceStatus >*
      mutable_face_status();

  // @@protoc_insertion_point(class_scope:ndn_message.FaceStatusMessage)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ndn_message::FaceStatusMessage_FaceStatus > face_status_;
  friend void  protobuf_AddDesc_face_2dstatus_2eproto();
  friend void protobuf_AssignDesc_face_2dstatus_2eproto();
  friend void protobuf_ShutdownFile_face_2dstatus_2eproto();

  void InitAsDefaultInstance();
  static FaceStatusMessage* default_instance_;
};
// ===================================================================


// ===================================================================

// FaceStatusMessage_FaceStatus

// required uint64 face_id = 105;
inline bool FaceStatusMessage_FaceStatus::has_face_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FaceStatusMessage_FaceStatus::set_has_face_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FaceStatusMessage_FaceStatus::clear_has_face_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FaceStatusMessage_FaceStatus::clear_face_id() {
  face_id_ = GOOGLE_ULONGLONG(0);
  clear_has_face_id();
}
inline ::google::protobuf::uint64 FaceStatusMessage_FaceStatus::face_id() const {
  // @@protoc_insertion_point(field_get:ndn_message.FaceStatusMessage.FaceStatus.face_id)
  return face_id_;
}
inline void FaceStatusMessage_FaceStatus::set_face_id(::google::protobuf::uint64 value) {
  set_has_face_id();
  face_id_ = value;
  // @@protoc_insertion_point(field_set:ndn_message.FaceStatusMessage.FaceStatus.face_id)
}

// required string uri = 114;
inline bool FaceStatusMessage_FaceStatus::has_uri() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FaceStatusMessage_FaceStatus::set_has_uri() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FaceStatusMessage_FaceStatus::clear_has_uri() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FaceStatusMessage_FaceStatus::clear_uri() {
  if (uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uri_->clear();
  }
  clear_has_uri();
}
inline const ::std::string& FaceStatusMessage_FaceStatus::uri() const {
  // @@protoc_insertion_point(field_get:ndn_message.FaceStatusMessage.FaceStatus.uri)
  return *uri_;
}
inline void FaceStatusMessage_FaceStatus::set_uri(const ::std::string& value) {
  set_has_uri();
  if (uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uri_ = new ::std::string;
  }
  uri_->assign(value);
  // @@protoc_insertion_point(field_set:ndn_message.FaceStatusMessage.FaceStatus.uri)
}
inline void FaceStatusMessage_FaceStatus::set_uri(const char* value) {
  set_has_uri();
  if (uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uri_ = new ::std::string;
  }
  uri_->assign(value);
  // @@protoc_insertion_point(field_set_char:ndn_message.FaceStatusMessage.FaceStatus.uri)
}
inline void FaceStatusMessage_FaceStatus::set_uri(const char* value, size_t size) {
  set_has_uri();
  if (uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uri_ = new ::std::string;
  }
  uri_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ndn_message.FaceStatusMessage.FaceStatus.uri)
}
inline ::std::string* FaceStatusMessage_FaceStatus::mutable_uri() {
  set_has_uri();
  if (uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uri_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ndn_message.FaceStatusMessage.FaceStatus.uri)
  return uri_;
}
inline ::std::string* FaceStatusMessage_FaceStatus::release_uri() {
  clear_has_uri();
  if (uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = uri_;
    uri_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FaceStatusMessage_FaceStatus::set_allocated_uri(::std::string* uri) {
  if (uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete uri_;
  }
  if (uri) {
    set_has_uri();
    uri_ = uri;
  } else {
    clear_has_uri();
    uri_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ndn_message.FaceStatusMessage.FaceStatus.uri)
}

// required string local_uri = 129;
inline bool FaceStatusMessage_FaceStatus::has_local_uri() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FaceStatusMessage_FaceStatus::set_has_local_uri() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FaceStatusMessage_FaceStatus::clear_has_local_uri() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FaceStatusMessage_FaceStatus::clear_local_uri() {
  if (local_uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    local_uri_->clear();
  }
  clear_has_local_uri();
}
inline const ::std::string& FaceStatusMessage_FaceStatus::local_uri() const {
  // @@protoc_insertion_point(field_get:ndn_message.FaceStatusMessage.FaceStatus.local_uri)
  return *local_uri_;
}
inline void FaceStatusMessage_FaceStatus::set_local_uri(const ::std::string& value) {
  set_has_local_uri();
  if (local_uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    local_uri_ = new ::std::string;
  }
  local_uri_->assign(value);
  // @@protoc_insertion_point(field_set:ndn_message.FaceStatusMessage.FaceStatus.local_uri)
}
inline void FaceStatusMessage_FaceStatus::set_local_uri(const char* value) {
  set_has_local_uri();
  if (local_uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    local_uri_ = new ::std::string;
  }
  local_uri_->assign(value);
  // @@protoc_insertion_point(field_set_char:ndn_message.FaceStatusMessage.FaceStatus.local_uri)
}
inline void FaceStatusMessage_FaceStatus::set_local_uri(const char* value, size_t size) {
  set_has_local_uri();
  if (local_uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    local_uri_ = new ::std::string;
  }
  local_uri_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ndn_message.FaceStatusMessage.FaceStatus.local_uri)
}
inline ::std::string* FaceStatusMessage_FaceStatus::mutable_local_uri() {
  set_has_local_uri();
  if (local_uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    local_uri_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ndn_message.FaceStatusMessage.FaceStatus.local_uri)
  return local_uri_;
}
inline ::std::string* FaceStatusMessage_FaceStatus::release_local_uri() {
  clear_has_local_uri();
  if (local_uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = local_uri_;
    local_uri_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FaceStatusMessage_FaceStatus::set_allocated_local_uri(::std::string* local_uri) {
  if (local_uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete local_uri_;
  }
  if (local_uri) {
    set_has_local_uri();
    local_uri_ = local_uri;
  } else {
    clear_has_local_uri();
    local_uri_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ndn_message.FaceStatusMessage.FaceStatus.local_uri)
}

// optional uint64 expiration_period = 109;
inline bool FaceStatusMessage_FaceStatus::has_expiration_period() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FaceStatusMessage_FaceStatus::set_has_expiration_period() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FaceStatusMessage_FaceStatus::clear_has_expiration_period() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FaceStatusMessage_FaceStatus::clear_expiration_period() {
  expiration_period_ = GOOGLE_ULONGLONG(0);
  clear_has_expiration_period();
}
inline ::google::protobuf::uint64 FaceStatusMessage_FaceStatus::expiration_period() const {
  // @@protoc_insertion_point(field_get:ndn_message.FaceStatusMessage.FaceStatus.expiration_period)
  return expiration_period_;
}
inline void FaceStatusMessage_FaceStatus::set_expiration_period(::google::protobuf::uint64 value) {
  set_has_expiration_period();
  expiration_period_ = value;
  // @@protoc_insertion_point(field_set:ndn_message.FaceStatusMessage.FaceStatus.expiration_period)
}

// required uint64 face_scope = 132;
inline bool FaceStatusMessage_FaceStatus::has_face_scope() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FaceStatusMessage_FaceStatus::set_has_face_scope() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FaceStatusMessage_FaceStatus::clear_has_face_scope() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FaceStatusMessage_FaceStatus::clear_face_scope() {
  face_scope_ = GOOGLE_ULONGLONG(0);
  clear_has_face_scope();
}
inline ::google::protobuf::uint64 FaceStatusMessage_FaceStatus::face_scope() const {
  // @@protoc_insertion_point(field_get:ndn_message.FaceStatusMessage.FaceStatus.face_scope)
  return face_scope_;
}
inline void FaceStatusMessage_FaceStatus::set_face_scope(::google::protobuf::uint64 value) {
  set_has_face_scope();
  face_scope_ = value;
  // @@protoc_insertion_point(field_set:ndn_message.FaceStatusMessage.FaceStatus.face_scope)
}

// required uint64 face_persistency = 133;
inline bool FaceStatusMessage_FaceStatus::has_face_persistency() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FaceStatusMessage_FaceStatus::set_has_face_persistency() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FaceStatusMessage_FaceStatus::clear_has_face_persistency() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FaceStatusMessage_FaceStatus::clear_face_persistency() {
  face_persistency_ = GOOGLE_ULONGLONG(0);
  clear_has_face_persistency();
}
inline ::google::protobuf::uint64 FaceStatusMessage_FaceStatus::face_persistency() const {
  // @@protoc_insertion_point(field_get:ndn_message.FaceStatusMessage.FaceStatus.face_persistency)
  return face_persistency_;
}
inline void FaceStatusMessage_FaceStatus::set_face_persistency(::google::protobuf::uint64 value) {
  set_has_face_persistency();
  face_persistency_ = value;
  // @@protoc_insertion_point(field_set:ndn_message.FaceStatusMessage.FaceStatus.face_persistency)
}

// required uint64 link_type = 134;
inline bool FaceStatusMessage_FaceStatus::has_link_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FaceStatusMessage_FaceStatus::set_has_link_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FaceStatusMessage_FaceStatus::clear_has_link_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FaceStatusMessage_FaceStatus::clear_link_type() {
  link_type_ = GOOGLE_ULONGLONG(0);
  clear_has_link_type();
}
inline ::google::protobuf::uint64 FaceStatusMessage_FaceStatus::link_type() const {
  // @@protoc_insertion_point(field_get:ndn_message.FaceStatusMessage.FaceStatus.link_type)
  return link_type_;
}
inline void FaceStatusMessage_FaceStatus::set_link_type(::google::protobuf::uint64 value) {
  set_has_link_type();
  link_type_ = value;
  // @@protoc_insertion_point(field_set:ndn_message.FaceStatusMessage.FaceStatus.link_type)
}

// required uint64 n_in_interests = 144;
inline bool FaceStatusMessage_FaceStatus::has_n_in_interests() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FaceStatusMessage_FaceStatus::set_has_n_in_interests() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FaceStatusMessage_FaceStatus::clear_has_n_in_interests() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FaceStatusMessage_FaceStatus::clear_n_in_interests() {
  n_in_interests_ = GOOGLE_ULONGLONG(0);
  clear_has_n_in_interests();
}
inline ::google::protobuf::uint64 FaceStatusMessage_FaceStatus::n_in_interests() const {
  // @@protoc_insertion_point(field_get:ndn_message.FaceStatusMessage.FaceStatus.n_in_interests)
  return n_in_interests_;
}
inline void FaceStatusMessage_FaceStatus::set_n_in_interests(::google::protobuf::uint64 value) {
  set_has_n_in_interests();
  n_in_interests_ = value;
  // @@protoc_insertion_point(field_set:ndn_message.FaceStatusMessage.FaceStatus.n_in_interests)
}

// required uint64 n_in_datas = 145;
inline bool FaceStatusMessage_FaceStatus::has_n_in_datas() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void FaceStatusMessage_FaceStatus::set_has_n_in_datas() {
  _has_bits_[0] |= 0x00000100u;
}
inline void FaceStatusMessage_FaceStatus::clear_has_n_in_datas() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void FaceStatusMessage_FaceStatus::clear_n_in_datas() {
  n_in_datas_ = GOOGLE_ULONGLONG(0);
  clear_has_n_in_datas();
}
inline ::google::protobuf::uint64 FaceStatusMessage_FaceStatus::n_in_datas() const {
  // @@protoc_insertion_point(field_get:ndn_message.FaceStatusMessage.FaceStatus.n_in_datas)
  return n_in_datas_;
}
inline void FaceStatusMessage_FaceStatus::set_n_in_datas(::google::protobuf::uint64 value) {
  set_has_n_in_datas();
  n_in_datas_ = value;
  // @@protoc_insertion_point(field_set:ndn_message.FaceStatusMessage.FaceStatus.n_in_datas)
}

// required uint64 n_out_interests = 146;
inline bool FaceStatusMessage_FaceStatus::has_n_out_interests() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void FaceStatusMessage_FaceStatus::set_has_n_out_interests() {
  _has_bits_[0] |= 0x00000200u;
}
inline void FaceStatusMessage_FaceStatus::clear_has_n_out_interests() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void FaceStatusMessage_FaceStatus::clear_n_out_interests() {
  n_out_interests_ = GOOGLE_ULONGLONG(0);
  clear_has_n_out_interests();
}
inline ::google::protobuf::uint64 FaceStatusMessage_FaceStatus::n_out_interests() const {
  // @@protoc_insertion_point(field_get:ndn_message.FaceStatusMessage.FaceStatus.n_out_interests)
  return n_out_interests_;
}
inline void FaceStatusMessage_FaceStatus::set_n_out_interests(::google::protobuf::uint64 value) {
  set_has_n_out_interests();
  n_out_interests_ = value;
  // @@protoc_insertion_point(field_set:ndn_message.FaceStatusMessage.FaceStatus.n_out_interests)
}

// required uint64 n_out_datas = 147;
inline bool FaceStatusMessage_FaceStatus::has_n_out_datas() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void FaceStatusMessage_FaceStatus::set_has_n_out_datas() {
  _has_bits_[0] |= 0x00000400u;
}
inline void FaceStatusMessage_FaceStatus::clear_has_n_out_datas() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void FaceStatusMessage_FaceStatus::clear_n_out_datas() {
  n_out_datas_ = GOOGLE_ULONGLONG(0);
  clear_has_n_out_datas();
}
inline ::google::protobuf::uint64 FaceStatusMessage_FaceStatus::n_out_datas() const {
  // @@protoc_insertion_point(field_get:ndn_message.FaceStatusMessage.FaceStatus.n_out_datas)
  return n_out_datas_;
}
inline void FaceStatusMessage_FaceStatus::set_n_out_datas(::google::protobuf::uint64 value) {
  set_has_n_out_datas();
  n_out_datas_ = value;
  // @@protoc_insertion_point(field_set:ndn_message.FaceStatusMessage.FaceStatus.n_out_datas)
}

// required uint64 n_in_bytes = 148;
inline bool FaceStatusMessage_FaceStatus::has_n_in_bytes() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void FaceStatusMessage_FaceStatus::set_has_n_in_bytes() {
  _has_bits_[0] |= 0x00000800u;
}
inline void FaceStatusMessage_FaceStatus::clear_has_n_in_bytes() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void FaceStatusMessage_FaceStatus::clear_n_in_bytes() {
  n_in_bytes_ = GOOGLE_ULONGLONG(0);
  clear_has_n_in_bytes();
}
inline ::google::protobuf::uint64 FaceStatusMessage_FaceStatus::n_in_bytes() const {
  // @@protoc_insertion_point(field_get:ndn_message.FaceStatusMessage.FaceStatus.n_in_bytes)
  return n_in_bytes_;
}
inline void FaceStatusMessage_FaceStatus::set_n_in_bytes(::google::protobuf::uint64 value) {
  set_has_n_in_bytes();
  n_in_bytes_ = value;
  // @@protoc_insertion_point(field_set:ndn_message.FaceStatusMessage.FaceStatus.n_in_bytes)
}

// required uint64 n_out_bytes = 149;
inline bool FaceStatusMessage_FaceStatus::has_n_out_bytes() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void FaceStatusMessage_FaceStatus::set_has_n_out_bytes() {
  _has_bits_[0] |= 0x00001000u;
}
inline void FaceStatusMessage_FaceStatus::clear_has_n_out_bytes() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void FaceStatusMessage_FaceStatus::clear_n_out_bytes() {
  n_out_bytes_ = GOOGLE_ULONGLONG(0);
  clear_has_n_out_bytes();
}
inline ::google::protobuf::uint64 FaceStatusMessage_FaceStatus::n_out_bytes() const {
  // @@protoc_insertion_point(field_get:ndn_message.FaceStatusMessage.FaceStatus.n_out_bytes)
  return n_out_bytes_;
}
inline void FaceStatusMessage_FaceStatus::set_n_out_bytes(::google::protobuf::uint64 value) {
  set_has_n_out_bytes();
  n_out_bytes_ = value;
  // @@protoc_insertion_point(field_set:ndn_message.FaceStatusMessage.FaceStatus.n_out_bytes)
}

// -------------------------------------------------------------------

// FaceStatusMessage

// repeated .ndn_message.FaceStatusMessage.FaceStatus face_status = 128;
inline int FaceStatusMessage::face_status_size() const {
  return face_status_.size();
}
inline void FaceStatusMessage::clear_face_status() {
  face_status_.Clear();
}
inline const ::ndn_message::FaceStatusMessage_FaceStatus& FaceStatusMessage::face_status(int index) const {
  // @@protoc_insertion_point(field_get:ndn_message.FaceStatusMessage.face_status)
  return face_status_.Get(index);
}
inline ::ndn_message::FaceStatusMessage_FaceStatus* FaceStatusMessage::mutable_face_status(int index) {
  // @@protoc_insertion_point(field_mutable:ndn_message.FaceStatusMessage.face_status)
  return face_status_.Mutable(index);
}
inline ::ndn_message::FaceStatusMessage_FaceStatus* FaceStatusMessage::add_face_status() {
  // @@protoc_insertion_point(field_add:ndn_message.FaceStatusMessage.face_status)
  return face_status_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ndn_message::FaceStatusMessage_FaceStatus >&
FaceStatusMessage::face_status() const {
  // @@protoc_insertion_point(field_list:ndn_message.FaceStatusMessage.face_status)
  return face_status_;
}
inline ::google::protobuf::RepeatedPtrField< ::ndn_message::FaceStatusMessage_FaceStatus >*
FaceStatusMessage::mutable_face_status() {
  // @@protoc_insertion_point(field_mutable_list:ndn_message.FaceStatusMessage.face_status)
  return &face_status_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ndn_message

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_face_2dstatus_2eproto__INCLUDED
