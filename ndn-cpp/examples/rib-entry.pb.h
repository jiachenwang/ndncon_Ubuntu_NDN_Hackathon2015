// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rib-entry.proto

#ifndef PROTOBUF_rib_2dentry_2eproto__INCLUDED
#define PROTOBUF_rib_2dentry_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ndn_message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_rib_2dentry_2eproto();
void protobuf_AssignDesc_rib_2dentry_2eproto();
void protobuf_ShutdownFile_rib_2dentry_2eproto();

class RibEntryMessage;
class RibEntryMessage_Name;
class RibEntryMessage_Route;
class RibEntryMessage_RibEntry;

// ===================================================================

class RibEntryMessage_Name : public ::google::protobuf::Message {
 public:
  RibEntryMessage_Name();
  virtual ~RibEntryMessage_Name();

  RibEntryMessage_Name(const RibEntryMessage_Name& from);

  inline RibEntryMessage_Name& operator=(const RibEntryMessage_Name& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RibEntryMessage_Name& default_instance();

  void Swap(RibEntryMessage_Name* other);

  // implements Message ----------------------------------------------

  RibEntryMessage_Name* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RibEntryMessage_Name& from);
  void MergeFrom(const RibEntryMessage_Name& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes component = 8;
  inline int component_size() const;
  inline void clear_component();
  static const int kComponentFieldNumber = 8;
  inline const ::std::string& component(int index) const;
  inline ::std::string* mutable_component(int index);
  inline void set_component(int index, const ::std::string& value);
  inline void set_component(int index, const char* value);
  inline void set_component(int index, const void* value, size_t size);
  inline ::std::string* add_component();
  inline void add_component(const ::std::string& value);
  inline void add_component(const char* value);
  inline void add_component(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& component() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_component();

  // @@protoc_insertion_point(class_scope:ndn_message.RibEntryMessage.Name)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> component_;
  friend void  protobuf_AddDesc_rib_2dentry_2eproto();
  friend void protobuf_AssignDesc_rib_2dentry_2eproto();
  friend void protobuf_ShutdownFile_rib_2dentry_2eproto();

  void InitAsDefaultInstance();
  static RibEntryMessage_Name* default_instance_;
};
// -------------------------------------------------------------------

class RibEntryMessage_Route : public ::google::protobuf::Message {
 public:
  RibEntryMessage_Route();
  virtual ~RibEntryMessage_Route();

  RibEntryMessage_Route(const RibEntryMessage_Route& from);

  inline RibEntryMessage_Route& operator=(const RibEntryMessage_Route& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RibEntryMessage_Route& default_instance();

  void Swap(RibEntryMessage_Route* other);

  // implements Message ----------------------------------------------

  RibEntryMessage_Route* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RibEntryMessage_Route& from);
  void MergeFrom(const RibEntryMessage_Route& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 face_id = 105;
  inline bool has_face_id() const;
  inline void clear_face_id();
  static const int kFaceIdFieldNumber = 105;
  inline ::google::protobuf::uint32 face_id() const;
  inline void set_face_id(::google::protobuf::uint32 value);

  // required uint32 origin = 111;
  inline bool has_origin() const;
  inline void clear_origin();
  static const int kOriginFieldNumber = 111;
  inline ::google::protobuf::uint32 origin() const;
  inline void set_origin(::google::protobuf::uint32 value);

  // required uint32 cost = 106;
  inline bool has_cost() const;
  inline void clear_cost();
  static const int kCostFieldNumber = 106;
  inline ::google::protobuf::uint32 cost() const;
  inline void set_cost(::google::protobuf::uint32 value);

  // required uint32 flags = 108;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 108;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);

  // optional uint32 expiration_period = 109;
  inline bool has_expiration_period() const;
  inline void clear_expiration_period();
  static const int kExpirationPeriodFieldNumber = 109;
  inline ::google::protobuf::uint32 expiration_period() const;
  inline void set_expiration_period(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ndn_message.RibEntryMessage.Route)
 private:
  inline void set_has_face_id();
  inline void clear_has_face_id();
  inline void set_has_origin();
  inline void clear_has_origin();
  inline void set_has_cost();
  inline void clear_has_cost();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_expiration_period();
  inline void clear_has_expiration_period();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 face_id_;
  ::google::protobuf::uint32 origin_;
  ::google::protobuf::uint32 cost_;
  ::google::protobuf::uint32 flags_;
  ::google::protobuf::uint32 expiration_period_;
  friend void  protobuf_AddDesc_rib_2dentry_2eproto();
  friend void protobuf_AssignDesc_rib_2dentry_2eproto();
  friend void protobuf_ShutdownFile_rib_2dentry_2eproto();

  void InitAsDefaultInstance();
  static RibEntryMessage_Route* default_instance_;
};
// -------------------------------------------------------------------

class RibEntryMessage_RibEntry : public ::google::protobuf::Message {
 public:
  RibEntryMessage_RibEntry();
  virtual ~RibEntryMessage_RibEntry();

  RibEntryMessage_RibEntry(const RibEntryMessage_RibEntry& from);

  inline RibEntryMessage_RibEntry& operator=(const RibEntryMessage_RibEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RibEntryMessage_RibEntry& default_instance();

  void Swap(RibEntryMessage_RibEntry* other);

  // implements Message ----------------------------------------------

  RibEntryMessage_RibEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RibEntryMessage_RibEntry& from);
  void MergeFrom(const RibEntryMessage_RibEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ndn_message.RibEntryMessage.Name name = 7;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 7;
  inline const ::ndn_message::RibEntryMessage_Name& name() const;
  inline ::ndn_message::RibEntryMessage_Name* mutable_name();
  inline ::ndn_message::RibEntryMessage_Name* release_name();
  inline void set_allocated_name(::ndn_message::RibEntryMessage_Name* name);

  // repeated .ndn_message.RibEntryMessage.Route routes = 129;
  inline int routes_size() const;
  inline void clear_routes();
  static const int kRoutesFieldNumber = 129;
  inline const ::ndn_message::RibEntryMessage_Route& routes(int index) const;
  inline ::ndn_message::RibEntryMessage_Route* mutable_routes(int index);
  inline ::ndn_message::RibEntryMessage_Route* add_routes();
  inline const ::google::protobuf::RepeatedPtrField< ::ndn_message::RibEntryMessage_Route >&
      routes() const;
  inline ::google::protobuf::RepeatedPtrField< ::ndn_message::RibEntryMessage_Route >*
      mutable_routes();

  // @@protoc_insertion_point(class_scope:ndn_message.RibEntryMessage.RibEntry)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ndn_message::RibEntryMessage_Name* name_;
  ::google::protobuf::RepeatedPtrField< ::ndn_message::RibEntryMessage_Route > routes_;
  friend void  protobuf_AddDesc_rib_2dentry_2eproto();
  friend void protobuf_AssignDesc_rib_2dentry_2eproto();
  friend void protobuf_ShutdownFile_rib_2dentry_2eproto();

  void InitAsDefaultInstance();
  static RibEntryMessage_RibEntry* default_instance_;
};
// -------------------------------------------------------------------

class RibEntryMessage : public ::google::protobuf::Message {
 public:
  RibEntryMessage();
  virtual ~RibEntryMessage();

  RibEntryMessage(const RibEntryMessage& from);

  inline RibEntryMessage& operator=(const RibEntryMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RibEntryMessage& default_instance();

  void Swap(RibEntryMessage* other);

  // implements Message ----------------------------------------------

  RibEntryMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RibEntryMessage& from);
  void MergeFrom(const RibEntryMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef RibEntryMessage_Name Name;
  typedef RibEntryMessage_Route Route;
  typedef RibEntryMessage_RibEntry RibEntry;

  // accessors -------------------------------------------------------

  // repeated .ndn_message.RibEntryMessage.RibEntry rib_entry = 128;
  inline int rib_entry_size() const;
  inline void clear_rib_entry();
  static const int kRibEntryFieldNumber = 128;
  inline const ::ndn_message::RibEntryMessage_RibEntry& rib_entry(int index) const;
  inline ::ndn_message::RibEntryMessage_RibEntry* mutable_rib_entry(int index);
  inline ::ndn_message::RibEntryMessage_RibEntry* add_rib_entry();
  inline const ::google::protobuf::RepeatedPtrField< ::ndn_message::RibEntryMessage_RibEntry >&
      rib_entry() const;
  inline ::google::protobuf::RepeatedPtrField< ::ndn_message::RibEntryMessage_RibEntry >*
      mutable_rib_entry();

  // @@protoc_insertion_point(class_scope:ndn_message.RibEntryMessage)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ndn_message::RibEntryMessage_RibEntry > rib_entry_;
  friend void  protobuf_AddDesc_rib_2dentry_2eproto();
  friend void protobuf_AssignDesc_rib_2dentry_2eproto();
  friend void protobuf_ShutdownFile_rib_2dentry_2eproto();

  void InitAsDefaultInstance();
  static RibEntryMessage* default_instance_;
};
// ===================================================================


// ===================================================================

// RibEntryMessage_Name

// repeated bytes component = 8;
inline int RibEntryMessage_Name::component_size() const {
  return component_.size();
}
inline void RibEntryMessage_Name::clear_component() {
  component_.Clear();
}
inline const ::std::string& RibEntryMessage_Name::component(int index) const {
  // @@protoc_insertion_point(field_get:ndn_message.RibEntryMessage.Name.component)
  return component_.Get(index);
}
inline ::std::string* RibEntryMessage_Name::mutable_component(int index) {
  // @@protoc_insertion_point(field_mutable:ndn_message.RibEntryMessage.Name.component)
  return component_.Mutable(index);
}
inline void RibEntryMessage_Name::set_component(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ndn_message.RibEntryMessage.Name.component)
  component_.Mutable(index)->assign(value);
}
inline void RibEntryMessage_Name::set_component(int index, const char* value) {
  component_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ndn_message.RibEntryMessage.Name.component)
}
inline void RibEntryMessage_Name::set_component(int index, const void* value, size_t size) {
  component_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ndn_message.RibEntryMessage.Name.component)
}
inline ::std::string* RibEntryMessage_Name::add_component() {
  return component_.Add();
}
inline void RibEntryMessage_Name::add_component(const ::std::string& value) {
  component_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ndn_message.RibEntryMessage.Name.component)
}
inline void RibEntryMessage_Name::add_component(const char* value) {
  component_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ndn_message.RibEntryMessage.Name.component)
}
inline void RibEntryMessage_Name::add_component(const void* value, size_t size) {
  component_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ndn_message.RibEntryMessage.Name.component)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
RibEntryMessage_Name::component() const {
  // @@protoc_insertion_point(field_list:ndn_message.RibEntryMessage.Name.component)
  return component_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
RibEntryMessage_Name::mutable_component() {
  // @@protoc_insertion_point(field_mutable_list:ndn_message.RibEntryMessage.Name.component)
  return &component_;
}

// -------------------------------------------------------------------

// RibEntryMessage_Route

// required uint32 face_id = 105;
inline bool RibEntryMessage_Route::has_face_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RibEntryMessage_Route::set_has_face_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RibEntryMessage_Route::clear_has_face_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RibEntryMessage_Route::clear_face_id() {
  face_id_ = 0u;
  clear_has_face_id();
}
inline ::google::protobuf::uint32 RibEntryMessage_Route::face_id() const {
  // @@protoc_insertion_point(field_get:ndn_message.RibEntryMessage.Route.face_id)
  return face_id_;
}
inline void RibEntryMessage_Route::set_face_id(::google::protobuf::uint32 value) {
  set_has_face_id();
  face_id_ = value;
  // @@protoc_insertion_point(field_set:ndn_message.RibEntryMessage.Route.face_id)
}

// required uint32 origin = 111;
inline bool RibEntryMessage_Route::has_origin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RibEntryMessage_Route::set_has_origin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RibEntryMessage_Route::clear_has_origin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RibEntryMessage_Route::clear_origin() {
  origin_ = 0u;
  clear_has_origin();
}
inline ::google::protobuf::uint32 RibEntryMessage_Route::origin() const {
  // @@protoc_insertion_point(field_get:ndn_message.RibEntryMessage.Route.origin)
  return origin_;
}
inline void RibEntryMessage_Route::set_origin(::google::protobuf::uint32 value) {
  set_has_origin();
  origin_ = value;
  // @@protoc_insertion_point(field_set:ndn_message.RibEntryMessage.Route.origin)
}

// required uint32 cost = 106;
inline bool RibEntryMessage_Route::has_cost() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RibEntryMessage_Route::set_has_cost() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RibEntryMessage_Route::clear_has_cost() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RibEntryMessage_Route::clear_cost() {
  cost_ = 0u;
  clear_has_cost();
}
inline ::google::protobuf::uint32 RibEntryMessage_Route::cost() const {
  // @@protoc_insertion_point(field_get:ndn_message.RibEntryMessage.Route.cost)
  return cost_;
}
inline void RibEntryMessage_Route::set_cost(::google::protobuf::uint32 value) {
  set_has_cost();
  cost_ = value;
  // @@protoc_insertion_point(field_set:ndn_message.RibEntryMessage.Route.cost)
}

// required uint32 flags = 108;
inline bool RibEntryMessage_Route::has_flags() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RibEntryMessage_Route::set_has_flags() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RibEntryMessage_Route::clear_has_flags() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RibEntryMessage_Route::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 RibEntryMessage_Route::flags() const {
  // @@protoc_insertion_point(field_get:ndn_message.RibEntryMessage.Route.flags)
  return flags_;
}
inline void RibEntryMessage_Route::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:ndn_message.RibEntryMessage.Route.flags)
}

// optional uint32 expiration_period = 109;
inline bool RibEntryMessage_Route::has_expiration_period() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RibEntryMessage_Route::set_has_expiration_period() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RibEntryMessage_Route::clear_has_expiration_period() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RibEntryMessage_Route::clear_expiration_period() {
  expiration_period_ = 0u;
  clear_has_expiration_period();
}
inline ::google::protobuf::uint32 RibEntryMessage_Route::expiration_period() const {
  // @@protoc_insertion_point(field_get:ndn_message.RibEntryMessage.Route.expiration_period)
  return expiration_period_;
}
inline void RibEntryMessage_Route::set_expiration_period(::google::protobuf::uint32 value) {
  set_has_expiration_period();
  expiration_period_ = value;
  // @@protoc_insertion_point(field_set:ndn_message.RibEntryMessage.Route.expiration_period)
}

// -------------------------------------------------------------------

// RibEntryMessage_RibEntry

// required .ndn_message.RibEntryMessage.Name name = 7;
inline bool RibEntryMessage_RibEntry::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RibEntryMessage_RibEntry::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RibEntryMessage_RibEntry::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RibEntryMessage_RibEntry::clear_name() {
  if (name_ != NULL) name_->::ndn_message::RibEntryMessage_Name::Clear();
  clear_has_name();
}
inline const ::ndn_message::RibEntryMessage_Name& RibEntryMessage_RibEntry::name() const {
  // @@protoc_insertion_point(field_get:ndn_message.RibEntryMessage.RibEntry.name)
  return name_ != NULL ? *name_ : *default_instance_->name_;
}
inline ::ndn_message::RibEntryMessage_Name* RibEntryMessage_RibEntry::mutable_name() {
  set_has_name();
  if (name_ == NULL) name_ = new ::ndn_message::RibEntryMessage_Name;
  // @@protoc_insertion_point(field_mutable:ndn_message.RibEntryMessage.RibEntry.name)
  return name_;
}
inline ::ndn_message::RibEntryMessage_Name* RibEntryMessage_RibEntry::release_name() {
  clear_has_name();
  ::ndn_message::RibEntryMessage_Name* temp = name_;
  name_ = NULL;
  return temp;
}
inline void RibEntryMessage_RibEntry::set_allocated_name(::ndn_message::RibEntryMessage_Name* name) {
  delete name_;
  name_ = name;
  if (name) {
    set_has_name();
  } else {
    clear_has_name();
  }
  // @@protoc_insertion_point(field_set_allocated:ndn_message.RibEntryMessage.RibEntry.name)
}

// repeated .ndn_message.RibEntryMessage.Route routes = 129;
inline int RibEntryMessage_RibEntry::routes_size() const {
  return routes_.size();
}
inline void RibEntryMessage_RibEntry::clear_routes() {
  routes_.Clear();
}
inline const ::ndn_message::RibEntryMessage_Route& RibEntryMessage_RibEntry::routes(int index) const {
  // @@protoc_insertion_point(field_get:ndn_message.RibEntryMessage.RibEntry.routes)
  return routes_.Get(index);
}
inline ::ndn_message::RibEntryMessage_Route* RibEntryMessage_RibEntry::mutable_routes(int index) {
  // @@protoc_insertion_point(field_mutable:ndn_message.RibEntryMessage.RibEntry.routes)
  return routes_.Mutable(index);
}
inline ::ndn_message::RibEntryMessage_Route* RibEntryMessage_RibEntry::add_routes() {
  // @@protoc_insertion_point(field_add:ndn_message.RibEntryMessage.RibEntry.routes)
  return routes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ndn_message::RibEntryMessage_Route >&
RibEntryMessage_RibEntry::routes() const {
  // @@protoc_insertion_point(field_list:ndn_message.RibEntryMessage.RibEntry.routes)
  return routes_;
}
inline ::google::protobuf::RepeatedPtrField< ::ndn_message::RibEntryMessage_Route >*
RibEntryMessage_RibEntry::mutable_routes() {
  // @@protoc_insertion_point(field_mutable_list:ndn_message.RibEntryMessage.RibEntry.routes)
  return &routes_;
}

// -------------------------------------------------------------------

// RibEntryMessage

// repeated .ndn_message.RibEntryMessage.RibEntry rib_entry = 128;
inline int RibEntryMessage::rib_entry_size() const {
  return rib_entry_.size();
}
inline void RibEntryMessage::clear_rib_entry() {
  rib_entry_.Clear();
}
inline const ::ndn_message::RibEntryMessage_RibEntry& RibEntryMessage::rib_entry(int index) const {
  // @@protoc_insertion_point(field_get:ndn_message.RibEntryMessage.rib_entry)
  return rib_entry_.Get(index);
}
inline ::ndn_message::RibEntryMessage_RibEntry* RibEntryMessage::mutable_rib_entry(int index) {
  // @@protoc_insertion_point(field_mutable:ndn_message.RibEntryMessage.rib_entry)
  return rib_entry_.Mutable(index);
}
inline ::ndn_message::RibEntryMessage_RibEntry* RibEntryMessage::add_rib_entry() {
  // @@protoc_insertion_point(field_add:ndn_message.RibEntryMessage.rib_entry)
  return rib_entry_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ndn_message::RibEntryMessage_RibEntry >&
RibEntryMessage::rib_entry() const {
  // @@protoc_insertion_point(field_list:ndn_message.RibEntryMessage.rib_entry)
  return rib_entry_;
}
inline ::google::protobuf::RepeatedPtrField< ::ndn_message::RibEntryMessage_RibEntry >*
RibEntryMessage::mutable_rib_entry() {
  // @@protoc_insertion_point(field_mutable_list:ndn_message.RibEntryMessage.rib_entry)
  return &rib_entry_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ndn_message

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rib_2dentry_2eproto__INCLUDED
