// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: face-status.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "face-status.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ndn_message {

namespace {

const ::google::protobuf::Descriptor* FaceStatusMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FaceStatusMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* FaceStatusMessage_FaceStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FaceStatusMessage_FaceStatus_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_face_2dstatus_2eproto() {
  protobuf_AddDesc_face_2dstatus_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "face-status.proto");
  GOOGLE_CHECK(file != NULL);
  FaceStatusMessage_descriptor_ = file->message_type(0);
  static const int FaceStatusMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceStatusMessage, face_status_),
  };
  FaceStatusMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FaceStatusMessage_descriptor_,
      FaceStatusMessage::default_instance_,
      FaceStatusMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceStatusMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceStatusMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FaceStatusMessage));
  FaceStatusMessage_FaceStatus_descriptor_ = FaceStatusMessage_descriptor_->nested_type(0);
  static const int FaceStatusMessage_FaceStatus_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceStatusMessage_FaceStatus, face_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceStatusMessage_FaceStatus, uri_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceStatusMessage_FaceStatus, local_uri_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceStatusMessage_FaceStatus, expiration_period_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceStatusMessage_FaceStatus, face_scope_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceStatusMessage_FaceStatus, face_persistency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceStatusMessage_FaceStatus, link_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceStatusMessage_FaceStatus, n_in_interests_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceStatusMessage_FaceStatus, n_in_datas_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceStatusMessage_FaceStatus, n_out_interests_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceStatusMessage_FaceStatus, n_out_datas_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceStatusMessage_FaceStatus, n_in_bytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceStatusMessage_FaceStatus, n_out_bytes_),
  };
  FaceStatusMessage_FaceStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FaceStatusMessage_FaceStatus_descriptor_,
      FaceStatusMessage_FaceStatus::default_instance_,
      FaceStatusMessage_FaceStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceStatusMessage_FaceStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceStatusMessage_FaceStatus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FaceStatusMessage_FaceStatus));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_face_2dstatus_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FaceStatusMessage_descriptor_, &FaceStatusMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FaceStatusMessage_FaceStatus_descriptor_, &FaceStatusMessage_FaceStatus::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_face_2dstatus_2eproto() {
  delete FaceStatusMessage::default_instance_;
  delete FaceStatusMessage_reflection_;
  delete FaceStatusMessage_FaceStatus::default_instance_;
  delete FaceStatusMessage_FaceStatus_reflection_;
}

void protobuf_AddDesc_face_2dstatus_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021face-status.proto\022\013ndn_message\"\375\002\n\021Fac"
    "eStatusMessage\022\?\n\013face_status\030\200\001 \003(\0132).n"
    "dn_message.FaceStatusMessage.FaceStatus\032"
    "\246\002\n\nFaceStatus\022\017\n\007face_id\030i \002(\004\022\013\n\003uri\030r"
    " \002(\t\022\022\n\tlocal_uri\030\201\001 \002(\t\022\031\n\021expiration_p"
    "eriod\030m \001(\004\022\023\n\nface_scope\030\204\001 \002(\004\022\031\n\020face"
    "_persistency\030\205\001 \002(\004\022\022\n\tlink_type\030\206\001 \002(\004\022"
    "\027\n\016n_in_interests\030\220\001 \002(\004\022\023\n\nn_in_datas\030\221"
    "\001 \002(\004\022\030\n\017n_out_interests\030\222\001 \002(\004\022\024\n\013n_out"
    "_datas\030\223\001 \002(\004\022\023\n\nn_in_bytes\030\224\001 \002(\004\022\024\n\013n_"
    "out_bytes\030\225\001 \002(\004", 416);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "face-status.proto", &protobuf_RegisterTypes);
  FaceStatusMessage::default_instance_ = new FaceStatusMessage();
  FaceStatusMessage_FaceStatus::default_instance_ = new FaceStatusMessage_FaceStatus();
  FaceStatusMessage::default_instance_->InitAsDefaultInstance();
  FaceStatusMessage_FaceStatus::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_face_2dstatus_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_face_2dstatus_2eproto {
  StaticDescriptorInitializer_face_2dstatus_2eproto() {
    protobuf_AddDesc_face_2dstatus_2eproto();
  }
} static_descriptor_initializer_face_2dstatus_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int FaceStatusMessage_FaceStatus::kFaceIdFieldNumber;
const int FaceStatusMessage_FaceStatus::kUriFieldNumber;
const int FaceStatusMessage_FaceStatus::kLocalUriFieldNumber;
const int FaceStatusMessage_FaceStatus::kExpirationPeriodFieldNumber;
const int FaceStatusMessage_FaceStatus::kFaceScopeFieldNumber;
const int FaceStatusMessage_FaceStatus::kFacePersistencyFieldNumber;
const int FaceStatusMessage_FaceStatus::kLinkTypeFieldNumber;
const int FaceStatusMessage_FaceStatus::kNInInterestsFieldNumber;
const int FaceStatusMessage_FaceStatus::kNInDatasFieldNumber;
const int FaceStatusMessage_FaceStatus::kNOutInterestsFieldNumber;
const int FaceStatusMessage_FaceStatus::kNOutDatasFieldNumber;
const int FaceStatusMessage_FaceStatus::kNInBytesFieldNumber;
const int FaceStatusMessage_FaceStatus::kNOutBytesFieldNumber;
#endif  // !_MSC_VER

FaceStatusMessage_FaceStatus::FaceStatusMessage_FaceStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ndn_message.FaceStatusMessage.FaceStatus)
}

void FaceStatusMessage_FaceStatus::InitAsDefaultInstance() {
}

FaceStatusMessage_FaceStatus::FaceStatusMessage_FaceStatus(const FaceStatusMessage_FaceStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ndn_message.FaceStatusMessage.FaceStatus)
}

void FaceStatusMessage_FaceStatus::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  face_id_ = GOOGLE_ULONGLONG(0);
  uri_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_uri_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiration_period_ = GOOGLE_ULONGLONG(0);
  face_scope_ = GOOGLE_ULONGLONG(0);
  face_persistency_ = GOOGLE_ULONGLONG(0);
  link_type_ = GOOGLE_ULONGLONG(0);
  n_in_interests_ = GOOGLE_ULONGLONG(0);
  n_in_datas_ = GOOGLE_ULONGLONG(0);
  n_out_interests_ = GOOGLE_ULONGLONG(0);
  n_out_datas_ = GOOGLE_ULONGLONG(0);
  n_in_bytes_ = GOOGLE_ULONGLONG(0);
  n_out_bytes_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FaceStatusMessage_FaceStatus::~FaceStatusMessage_FaceStatus() {
  // @@protoc_insertion_point(destructor:ndn_message.FaceStatusMessage.FaceStatus)
  SharedDtor();
}

void FaceStatusMessage_FaceStatus::SharedDtor() {
  if (uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete uri_;
  }
  if (local_uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete local_uri_;
  }
  if (this != default_instance_) {
  }
}

void FaceStatusMessage_FaceStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FaceStatusMessage_FaceStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FaceStatusMessage_FaceStatus_descriptor_;
}

const FaceStatusMessage_FaceStatus& FaceStatusMessage_FaceStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_face_2dstatus_2eproto();
  return *default_instance_;
}

FaceStatusMessage_FaceStatus* FaceStatusMessage_FaceStatus::default_instance_ = NULL;

FaceStatusMessage_FaceStatus* FaceStatusMessage_FaceStatus::New() const {
  return new FaceStatusMessage_FaceStatus;
}

void FaceStatusMessage_FaceStatus::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<FaceStatusMessage_FaceStatus*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(expiration_period_, n_in_interests_);
    face_id_ = GOOGLE_ULONGLONG(0);
    if (has_uri()) {
      if (uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        uri_->clear();
      }
    }
    if (has_local_uri()) {
      if (local_uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        local_uri_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 7936) {
    ZR_(n_in_datas_, n_out_bytes_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FaceStatusMessage_FaceStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ndn_message.FaceStatusMessage.FaceStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 face_id = 105;
      case 105: {
        if (tag == 840) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &face_id_)));
          set_has_face_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(872)) goto parse_expiration_period;
        break;
      }

      // optional uint64 expiration_period = 109;
      case 109: {
        if (tag == 872) {
         parse_expiration_period:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &expiration_period_)));
          set_has_expiration_period();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(914)) goto parse_uri;
        break;
      }

      // required string uri = 114;
      case 114: {
        if (tag == 914) {
         parse_uri:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->uri().data(), this->uri().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "uri");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1034)) goto parse_local_uri;
        break;
      }

      // required string local_uri = 129;
      case 129: {
        if (tag == 1034) {
         parse_local_uri:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_local_uri()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->local_uri().data(), this->local_uri().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "local_uri");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1056)) goto parse_face_scope;
        break;
      }

      // required uint64 face_scope = 132;
      case 132: {
        if (tag == 1056) {
         parse_face_scope:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &face_scope_)));
          set_has_face_scope();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1064)) goto parse_face_persistency;
        break;
      }

      // required uint64 face_persistency = 133;
      case 133: {
        if (tag == 1064) {
         parse_face_persistency:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &face_persistency_)));
          set_has_face_persistency();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1072)) goto parse_link_type;
        break;
      }

      // required uint64 link_type = 134;
      case 134: {
        if (tag == 1072) {
         parse_link_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &link_type_)));
          set_has_link_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1152)) goto parse_n_in_interests;
        break;
      }

      // required uint64 n_in_interests = 144;
      case 144: {
        if (tag == 1152) {
         parse_n_in_interests:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &n_in_interests_)));
          set_has_n_in_interests();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1160)) goto parse_n_in_datas;
        break;
      }

      // required uint64 n_in_datas = 145;
      case 145: {
        if (tag == 1160) {
         parse_n_in_datas:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &n_in_datas_)));
          set_has_n_in_datas();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1168)) goto parse_n_out_interests;
        break;
      }

      // required uint64 n_out_interests = 146;
      case 146: {
        if (tag == 1168) {
         parse_n_out_interests:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &n_out_interests_)));
          set_has_n_out_interests();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1176)) goto parse_n_out_datas;
        break;
      }

      // required uint64 n_out_datas = 147;
      case 147: {
        if (tag == 1176) {
         parse_n_out_datas:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &n_out_datas_)));
          set_has_n_out_datas();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1184)) goto parse_n_in_bytes;
        break;
      }

      // required uint64 n_in_bytes = 148;
      case 148: {
        if (tag == 1184) {
         parse_n_in_bytes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &n_in_bytes_)));
          set_has_n_in_bytes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1192)) goto parse_n_out_bytes;
        break;
      }

      // required uint64 n_out_bytes = 149;
      case 149: {
        if (tag == 1192) {
         parse_n_out_bytes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &n_out_bytes_)));
          set_has_n_out_bytes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ndn_message.FaceStatusMessage.FaceStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ndn_message.FaceStatusMessage.FaceStatus)
  return false;
#undef DO_
}

void FaceStatusMessage_FaceStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ndn_message.FaceStatusMessage.FaceStatus)
  // required uint64 face_id = 105;
  if (has_face_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(105, this->face_id(), output);
  }

  // optional uint64 expiration_period = 109;
  if (has_expiration_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(109, this->expiration_period(), output);
  }

  // required string uri = 114;
  if (has_uri()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uri().data(), this->uri().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      114, this->uri(), output);
  }

  // required string local_uri = 129;
  if (has_local_uri()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->local_uri().data(), this->local_uri().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "local_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      129, this->local_uri(), output);
  }

  // required uint64 face_scope = 132;
  if (has_face_scope()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(132, this->face_scope(), output);
  }

  // required uint64 face_persistency = 133;
  if (has_face_persistency()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(133, this->face_persistency(), output);
  }

  // required uint64 link_type = 134;
  if (has_link_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(134, this->link_type(), output);
  }

  // required uint64 n_in_interests = 144;
  if (has_n_in_interests()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(144, this->n_in_interests(), output);
  }

  // required uint64 n_in_datas = 145;
  if (has_n_in_datas()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(145, this->n_in_datas(), output);
  }

  // required uint64 n_out_interests = 146;
  if (has_n_out_interests()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(146, this->n_out_interests(), output);
  }

  // required uint64 n_out_datas = 147;
  if (has_n_out_datas()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(147, this->n_out_datas(), output);
  }

  // required uint64 n_in_bytes = 148;
  if (has_n_in_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(148, this->n_in_bytes(), output);
  }

  // required uint64 n_out_bytes = 149;
  if (has_n_out_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(149, this->n_out_bytes(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ndn_message.FaceStatusMessage.FaceStatus)
}

::google::protobuf::uint8* FaceStatusMessage_FaceStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ndn_message.FaceStatusMessage.FaceStatus)
  // required uint64 face_id = 105;
  if (has_face_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(105, this->face_id(), target);
  }

  // optional uint64 expiration_period = 109;
  if (has_expiration_period()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(109, this->expiration_period(), target);
  }

  // required string uri = 114;
  if (has_uri()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uri().data(), this->uri().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        114, this->uri(), target);
  }

  // required string local_uri = 129;
  if (has_local_uri()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->local_uri().data(), this->local_uri().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "local_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        129, this->local_uri(), target);
  }

  // required uint64 face_scope = 132;
  if (has_face_scope()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(132, this->face_scope(), target);
  }

  // required uint64 face_persistency = 133;
  if (has_face_persistency()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(133, this->face_persistency(), target);
  }

  // required uint64 link_type = 134;
  if (has_link_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(134, this->link_type(), target);
  }

  // required uint64 n_in_interests = 144;
  if (has_n_in_interests()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(144, this->n_in_interests(), target);
  }

  // required uint64 n_in_datas = 145;
  if (has_n_in_datas()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(145, this->n_in_datas(), target);
  }

  // required uint64 n_out_interests = 146;
  if (has_n_out_interests()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(146, this->n_out_interests(), target);
  }

  // required uint64 n_out_datas = 147;
  if (has_n_out_datas()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(147, this->n_out_datas(), target);
  }

  // required uint64 n_in_bytes = 148;
  if (has_n_in_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(148, this->n_in_bytes(), target);
  }

  // required uint64 n_out_bytes = 149;
  if (has_n_out_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(149, this->n_out_bytes(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ndn_message.FaceStatusMessage.FaceStatus)
  return target;
}

int FaceStatusMessage_FaceStatus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 face_id = 105;
    if (has_face_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->face_id());
    }

    // required string uri = 114;
    if (has_uri()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uri());
    }

    // required string local_uri = 129;
    if (has_local_uri()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->local_uri());
    }

    // optional uint64 expiration_period = 109;
    if (has_expiration_period()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->expiration_period());
    }

    // required uint64 face_scope = 132;
    if (has_face_scope()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->face_scope());
    }

    // required uint64 face_persistency = 133;
    if (has_face_persistency()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->face_persistency());
    }

    // required uint64 link_type = 134;
    if (has_link_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->link_type());
    }

    // required uint64 n_in_interests = 144;
    if (has_n_in_interests()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->n_in_interests());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required uint64 n_in_datas = 145;
    if (has_n_in_datas()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->n_in_datas());
    }

    // required uint64 n_out_interests = 146;
    if (has_n_out_interests()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->n_out_interests());
    }

    // required uint64 n_out_datas = 147;
    if (has_n_out_datas()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->n_out_datas());
    }

    // required uint64 n_in_bytes = 148;
    if (has_n_in_bytes()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->n_in_bytes());
    }

    // required uint64 n_out_bytes = 149;
    if (has_n_out_bytes()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->n_out_bytes());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FaceStatusMessage_FaceStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FaceStatusMessage_FaceStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FaceStatusMessage_FaceStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FaceStatusMessage_FaceStatus::MergeFrom(const FaceStatusMessage_FaceStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_face_id()) {
      set_face_id(from.face_id());
    }
    if (from.has_uri()) {
      set_uri(from.uri());
    }
    if (from.has_local_uri()) {
      set_local_uri(from.local_uri());
    }
    if (from.has_expiration_period()) {
      set_expiration_period(from.expiration_period());
    }
    if (from.has_face_scope()) {
      set_face_scope(from.face_scope());
    }
    if (from.has_face_persistency()) {
      set_face_persistency(from.face_persistency());
    }
    if (from.has_link_type()) {
      set_link_type(from.link_type());
    }
    if (from.has_n_in_interests()) {
      set_n_in_interests(from.n_in_interests());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_n_in_datas()) {
      set_n_in_datas(from.n_in_datas());
    }
    if (from.has_n_out_interests()) {
      set_n_out_interests(from.n_out_interests());
    }
    if (from.has_n_out_datas()) {
      set_n_out_datas(from.n_out_datas());
    }
    if (from.has_n_in_bytes()) {
      set_n_in_bytes(from.n_in_bytes());
    }
    if (from.has_n_out_bytes()) {
      set_n_out_bytes(from.n_out_bytes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FaceStatusMessage_FaceStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FaceStatusMessage_FaceStatus::CopyFrom(const FaceStatusMessage_FaceStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FaceStatusMessage_FaceStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x00001ff7) != 0x00001ff7) return false;

  return true;
}

void FaceStatusMessage_FaceStatus::Swap(FaceStatusMessage_FaceStatus* other) {
  if (other != this) {
    std::swap(face_id_, other->face_id_);
    std::swap(uri_, other->uri_);
    std::swap(local_uri_, other->local_uri_);
    std::swap(expiration_period_, other->expiration_period_);
    std::swap(face_scope_, other->face_scope_);
    std::swap(face_persistency_, other->face_persistency_);
    std::swap(link_type_, other->link_type_);
    std::swap(n_in_interests_, other->n_in_interests_);
    std::swap(n_in_datas_, other->n_in_datas_);
    std::swap(n_out_interests_, other->n_out_interests_);
    std::swap(n_out_datas_, other->n_out_datas_);
    std::swap(n_in_bytes_, other->n_in_bytes_);
    std::swap(n_out_bytes_, other->n_out_bytes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FaceStatusMessage_FaceStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FaceStatusMessage_FaceStatus_descriptor_;
  metadata.reflection = FaceStatusMessage_FaceStatus_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int FaceStatusMessage::kFaceStatusFieldNumber;
#endif  // !_MSC_VER

FaceStatusMessage::FaceStatusMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ndn_message.FaceStatusMessage)
}

void FaceStatusMessage::InitAsDefaultInstance() {
}

FaceStatusMessage::FaceStatusMessage(const FaceStatusMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ndn_message.FaceStatusMessage)
}

void FaceStatusMessage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FaceStatusMessage::~FaceStatusMessage() {
  // @@protoc_insertion_point(destructor:ndn_message.FaceStatusMessage)
  SharedDtor();
}

void FaceStatusMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FaceStatusMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FaceStatusMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FaceStatusMessage_descriptor_;
}

const FaceStatusMessage& FaceStatusMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_face_2dstatus_2eproto();
  return *default_instance_;
}

FaceStatusMessage* FaceStatusMessage::default_instance_ = NULL;

FaceStatusMessage* FaceStatusMessage::New() const {
  return new FaceStatusMessage;
}

void FaceStatusMessage::Clear() {
  face_status_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FaceStatusMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ndn_message.FaceStatusMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ndn_message.FaceStatusMessage.FaceStatus face_status = 128;
      case 128: {
        if (tag == 1026) {
         parse_face_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_face_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1026)) goto parse_face_status;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ndn_message.FaceStatusMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ndn_message.FaceStatusMessage)
  return false;
#undef DO_
}

void FaceStatusMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ndn_message.FaceStatusMessage)
  // repeated .ndn_message.FaceStatusMessage.FaceStatus face_status = 128;
  for (int i = 0; i < this->face_status_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      128, this->face_status(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ndn_message.FaceStatusMessage)
}

::google::protobuf::uint8* FaceStatusMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ndn_message.FaceStatusMessage)
  // repeated .ndn_message.FaceStatusMessage.FaceStatus face_status = 128;
  for (int i = 0; i < this->face_status_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        128, this->face_status(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ndn_message.FaceStatusMessage)
  return target;
}

int FaceStatusMessage::ByteSize() const {
  int total_size = 0;

  // repeated .ndn_message.FaceStatusMessage.FaceStatus face_status = 128;
  total_size += 2 * this->face_status_size();
  for (int i = 0; i < this->face_status_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->face_status(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FaceStatusMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FaceStatusMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FaceStatusMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FaceStatusMessage::MergeFrom(const FaceStatusMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  face_status_.MergeFrom(from.face_status_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FaceStatusMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FaceStatusMessage::CopyFrom(const FaceStatusMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FaceStatusMessage::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->face_status())) return false;
  return true;
}

void FaceStatusMessage::Swap(FaceStatusMessage* other) {
  if (other != this) {
    face_status_.Swap(&other->face_status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FaceStatusMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FaceStatusMessage_descriptor_;
  metadata.reflection = FaceStatusMessage_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ndn_message

// @@protoc_insertion_point(global_scope)
