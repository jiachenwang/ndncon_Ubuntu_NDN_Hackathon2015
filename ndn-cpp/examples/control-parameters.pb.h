// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: control-parameters.proto

#ifndef PROTOBUF_control_2dparameters_2eproto__INCLUDED
#define PROTOBUF_control_2dparameters_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ndn_message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_control_2dparameters_2eproto();
void protobuf_AssignDesc_control_2dparameters_2eproto();
void protobuf_ShutdownFile_control_2dparameters_2eproto();

class ControlParametersTypes;
class ControlParametersTypes_Name;
class ControlParametersTypes_Strategy;
class ControlParametersTypes_ControlParameters;
class ControlParametersTypes_ControlParametersResponse;
class ControlParametersTypes_ControlParametersMessage;
class ControlParametersTypes_ControlParametersResponseMessage;

// ===================================================================

class ControlParametersTypes_Name : public ::google::protobuf::Message {
 public:
  ControlParametersTypes_Name();
  virtual ~ControlParametersTypes_Name();

  ControlParametersTypes_Name(const ControlParametersTypes_Name& from);

  inline ControlParametersTypes_Name& operator=(const ControlParametersTypes_Name& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ControlParametersTypes_Name& default_instance();

  void Swap(ControlParametersTypes_Name* other);

  // implements Message ----------------------------------------------

  ControlParametersTypes_Name* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ControlParametersTypes_Name& from);
  void MergeFrom(const ControlParametersTypes_Name& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes component = 8;
  inline int component_size() const;
  inline void clear_component();
  static const int kComponentFieldNumber = 8;
  inline const ::std::string& component(int index) const;
  inline ::std::string* mutable_component(int index);
  inline void set_component(int index, const ::std::string& value);
  inline void set_component(int index, const char* value);
  inline void set_component(int index, const void* value, size_t size);
  inline ::std::string* add_component();
  inline void add_component(const ::std::string& value);
  inline void add_component(const char* value);
  inline void add_component(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& component() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_component();

  // @@protoc_insertion_point(class_scope:ndn_message.ControlParametersTypes.Name)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> component_;
  friend void  protobuf_AddDesc_control_2dparameters_2eproto();
  friend void protobuf_AssignDesc_control_2dparameters_2eproto();
  friend void protobuf_ShutdownFile_control_2dparameters_2eproto();

  void InitAsDefaultInstance();
  static ControlParametersTypes_Name* default_instance_;
};
// -------------------------------------------------------------------

class ControlParametersTypes_Strategy : public ::google::protobuf::Message {
 public:
  ControlParametersTypes_Strategy();
  virtual ~ControlParametersTypes_Strategy();

  ControlParametersTypes_Strategy(const ControlParametersTypes_Strategy& from);

  inline ControlParametersTypes_Strategy& operator=(const ControlParametersTypes_Strategy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ControlParametersTypes_Strategy& default_instance();

  void Swap(ControlParametersTypes_Strategy* other);

  // implements Message ----------------------------------------------

  ControlParametersTypes_Strategy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ControlParametersTypes_Strategy& from);
  void MergeFrom(const ControlParametersTypes_Strategy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ndn_message.ControlParametersTypes.Name name = 7;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 7;
  inline const ::ndn_message::ControlParametersTypes_Name& name() const;
  inline ::ndn_message::ControlParametersTypes_Name* mutable_name();
  inline ::ndn_message::ControlParametersTypes_Name* release_name();
  inline void set_allocated_name(::ndn_message::ControlParametersTypes_Name* name);

  // @@protoc_insertion_point(class_scope:ndn_message.ControlParametersTypes.Strategy)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ndn_message::ControlParametersTypes_Name* name_;
  friend void  protobuf_AddDesc_control_2dparameters_2eproto();
  friend void protobuf_AssignDesc_control_2dparameters_2eproto();
  friend void protobuf_ShutdownFile_control_2dparameters_2eproto();

  void InitAsDefaultInstance();
  static ControlParametersTypes_Strategy* default_instance_;
};
// -------------------------------------------------------------------

class ControlParametersTypes_ControlParameters : public ::google::protobuf::Message {
 public:
  ControlParametersTypes_ControlParameters();
  virtual ~ControlParametersTypes_ControlParameters();

  ControlParametersTypes_ControlParameters(const ControlParametersTypes_ControlParameters& from);

  inline ControlParametersTypes_ControlParameters& operator=(const ControlParametersTypes_ControlParameters& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ControlParametersTypes_ControlParameters& default_instance();

  void Swap(ControlParametersTypes_ControlParameters* other);

  // implements Message ----------------------------------------------

  ControlParametersTypes_ControlParameters* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ControlParametersTypes_ControlParameters& from);
  void MergeFrom(const ControlParametersTypes_ControlParameters& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ndn_message.ControlParametersTypes.Name name = 7;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 7;
  inline const ::ndn_message::ControlParametersTypes_Name& name() const;
  inline ::ndn_message::ControlParametersTypes_Name* mutable_name();
  inline ::ndn_message::ControlParametersTypes_Name* release_name();
  inline void set_allocated_name(::ndn_message::ControlParametersTypes_Name* name);

  // optional uint64 face_id = 105;
  inline bool has_face_id() const;
  inline void clear_face_id();
  static const int kFaceIdFieldNumber = 105;
  inline ::google::protobuf::uint64 face_id() const;
  inline void set_face_id(::google::protobuf::uint64 value);

  // optional string uri = 114;
  inline bool has_uri() const;
  inline void clear_uri();
  static const int kUriFieldNumber = 114;
  inline const ::std::string& uri() const;
  inline void set_uri(const ::std::string& value);
  inline void set_uri(const char* value);
  inline void set_uri(const char* value, size_t size);
  inline ::std::string* mutable_uri();
  inline ::std::string* release_uri();
  inline void set_allocated_uri(::std::string* uri);

  // optional uint64 local_control_feature = 110;
  inline bool has_local_control_feature() const;
  inline void clear_local_control_feature();
  static const int kLocalControlFeatureFieldNumber = 110;
  inline ::google::protobuf::uint64 local_control_feature() const;
  inline void set_local_control_feature(::google::protobuf::uint64 value);

  // optional uint64 origin = 111;
  inline bool has_origin() const;
  inline void clear_origin();
  static const int kOriginFieldNumber = 111;
  inline ::google::protobuf::uint64 origin() const;
  inline void set_origin(::google::protobuf::uint64 value);

  // optional uint64 cost = 106;
  inline bool has_cost() const;
  inline void clear_cost();
  static const int kCostFieldNumber = 106;
  inline ::google::protobuf::uint64 cost() const;
  inline void set_cost(::google::protobuf::uint64 value);

  // optional uint64 flags = 108;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 108;
  inline ::google::protobuf::uint64 flags() const;
  inline void set_flags(::google::protobuf::uint64 value);

  // optional .ndn_message.ControlParametersTypes.Strategy strategy = 107;
  inline bool has_strategy() const;
  inline void clear_strategy();
  static const int kStrategyFieldNumber = 107;
  inline const ::ndn_message::ControlParametersTypes_Strategy& strategy() const;
  inline ::ndn_message::ControlParametersTypes_Strategy* mutable_strategy();
  inline ::ndn_message::ControlParametersTypes_Strategy* release_strategy();
  inline void set_allocated_strategy(::ndn_message::ControlParametersTypes_Strategy* strategy);

  // optional uint64 expiration_period = 109;
  inline bool has_expiration_period() const;
  inline void clear_expiration_period();
  static const int kExpirationPeriodFieldNumber = 109;
  inline ::google::protobuf::uint64 expiration_period() const;
  inline void set_expiration_period(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ndn_message.ControlParametersTypes.ControlParameters)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_face_id();
  inline void clear_has_face_id();
  inline void set_has_uri();
  inline void clear_has_uri();
  inline void set_has_local_control_feature();
  inline void clear_has_local_control_feature();
  inline void set_has_origin();
  inline void clear_has_origin();
  inline void set_has_cost();
  inline void clear_has_cost();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_strategy();
  inline void clear_has_strategy();
  inline void set_has_expiration_period();
  inline void clear_has_expiration_period();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ndn_message::ControlParametersTypes_Name* name_;
  ::google::protobuf::uint64 face_id_;
  ::std::string* uri_;
  ::google::protobuf::uint64 local_control_feature_;
  ::google::protobuf::uint64 origin_;
  ::google::protobuf::uint64 cost_;
  ::google::protobuf::uint64 flags_;
  ::ndn_message::ControlParametersTypes_Strategy* strategy_;
  ::google::protobuf::uint64 expiration_period_;
  friend void  protobuf_AddDesc_control_2dparameters_2eproto();
  friend void protobuf_AssignDesc_control_2dparameters_2eproto();
  friend void protobuf_ShutdownFile_control_2dparameters_2eproto();

  void InitAsDefaultInstance();
  static ControlParametersTypes_ControlParameters* default_instance_;
};
// -------------------------------------------------------------------

class ControlParametersTypes_ControlParametersResponse : public ::google::protobuf::Message {
 public:
  ControlParametersTypes_ControlParametersResponse();
  virtual ~ControlParametersTypes_ControlParametersResponse();

  ControlParametersTypes_ControlParametersResponse(const ControlParametersTypes_ControlParametersResponse& from);

  inline ControlParametersTypes_ControlParametersResponse& operator=(const ControlParametersTypes_ControlParametersResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ControlParametersTypes_ControlParametersResponse& default_instance();

  void Swap(ControlParametersTypes_ControlParametersResponse* other);

  // implements Message ----------------------------------------------

  ControlParametersTypes_ControlParametersResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ControlParametersTypes_ControlParametersResponse& from);
  void MergeFrom(const ControlParametersTypes_ControlParametersResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 status_code = 102;
  inline bool has_status_code() const;
  inline void clear_status_code();
  static const int kStatusCodeFieldNumber = 102;
  inline ::google::protobuf::uint64 status_code() const;
  inline void set_status_code(::google::protobuf::uint64 value);

  // required string status_text = 103;
  inline bool has_status_text() const;
  inline void clear_status_text();
  static const int kStatusTextFieldNumber = 103;
  inline const ::std::string& status_text() const;
  inline void set_status_text(const ::std::string& value);
  inline void set_status_text(const char* value);
  inline void set_status_text(const char* value, size_t size);
  inline ::std::string* mutable_status_text();
  inline ::std::string* release_status_text();
  inline void set_allocated_status_text(::std::string* status_text);

  // repeated .ndn_message.ControlParametersTypes.ControlParameters control_parameters = 104;
  inline int control_parameters_size() const;
  inline void clear_control_parameters();
  static const int kControlParametersFieldNumber = 104;
  inline const ::ndn_message::ControlParametersTypes_ControlParameters& control_parameters(int index) const;
  inline ::ndn_message::ControlParametersTypes_ControlParameters* mutable_control_parameters(int index);
  inline ::ndn_message::ControlParametersTypes_ControlParameters* add_control_parameters();
  inline const ::google::protobuf::RepeatedPtrField< ::ndn_message::ControlParametersTypes_ControlParameters >&
      control_parameters() const;
  inline ::google::protobuf::RepeatedPtrField< ::ndn_message::ControlParametersTypes_ControlParameters >*
      mutable_control_parameters();

  // @@protoc_insertion_point(class_scope:ndn_message.ControlParametersTypes.ControlParametersResponse)
 private:
  inline void set_has_status_code();
  inline void clear_has_status_code();
  inline void set_has_status_text();
  inline void clear_has_status_text();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 status_code_;
  ::std::string* status_text_;
  ::google::protobuf::RepeatedPtrField< ::ndn_message::ControlParametersTypes_ControlParameters > control_parameters_;
  friend void  protobuf_AddDesc_control_2dparameters_2eproto();
  friend void protobuf_AssignDesc_control_2dparameters_2eproto();
  friend void protobuf_ShutdownFile_control_2dparameters_2eproto();

  void InitAsDefaultInstance();
  static ControlParametersTypes_ControlParametersResponse* default_instance_;
};
// -------------------------------------------------------------------

class ControlParametersTypes_ControlParametersMessage : public ::google::protobuf::Message {
 public:
  ControlParametersTypes_ControlParametersMessage();
  virtual ~ControlParametersTypes_ControlParametersMessage();

  ControlParametersTypes_ControlParametersMessage(const ControlParametersTypes_ControlParametersMessage& from);

  inline ControlParametersTypes_ControlParametersMessage& operator=(const ControlParametersTypes_ControlParametersMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ControlParametersTypes_ControlParametersMessage& default_instance();

  void Swap(ControlParametersTypes_ControlParametersMessage* other);

  // implements Message ----------------------------------------------

  ControlParametersTypes_ControlParametersMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ControlParametersTypes_ControlParametersMessage& from);
  void MergeFrom(const ControlParametersTypes_ControlParametersMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ndn_message.ControlParametersTypes.ControlParameters control_parameters = 104;
  inline bool has_control_parameters() const;
  inline void clear_control_parameters();
  static const int kControlParametersFieldNumber = 104;
  inline const ::ndn_message::ControlParametersTypes_ControlParameters& control_parameters() const;
  inline ::ndn_message::ControlParametersTypes_ControlParameters* mutable_control_parameters();
  inline ::ndn_message::ControlParametersTypes_ControlParameters* release_control_parameters();
  inline void set_allocated_control_parameters(::ndn_message::ControlParametersTypes_ControlParameters* control_parameters);

  // @@protoc_insertion_point(class_scope:ndn_message.ControlParametersTypes.ControlParametersMessage)
 private:
  inline void set_has_control_parameters();
  inline void clear_has_control_parameters();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ndn_message::ControlParametersTypes_ControlParameters* control_parameters_;
  friend void  protobuf_AddDesc_control_2dparameters_2eproto();
  friend void protobuf_AssignDesc_control_2dparameters_2eproto();
  friend void protobuf_ShutdownFile_control_2dparameters_2eproto();

  void InitAsDefaultInstance();
  static ControlParametersTypes_ControlParametersMessage* default_instance_;
};
// -------------------------------------------------------------------

class ControlParametersTypes_ControlParametersResponseMessage : public ::google::protobuf::Message {
 public:
  ControlParametersTypes_ControlParametersResponseMessage();
  virtual ~ControlParametersTypes_ControlParametersResponseMessage();

  ControlParametersTypes_ControlParametersResponseMessage(const ControlParametersTypes_ControlParametersResponseMessage& from);

  inline ControlParametersTypes_ControlParametersResponseMessage& operator=(const ControlParametersTypes_ControlParametersResponseMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ControlParametersTypes_ControlParametersResponseMessage& default_instance();

  void Swap(ControlParametersTypes_ControlParametersResponseMessage* other);

  // implements Message ----------------------------------------------

  ControlParametersTypes_ControlParametersResponseMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ControlParametersTypes_ControlParametersResponseMessage& from);
  void MergeFrom(const ControlParametersTypes_ControlParametersResponseMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ndn_message.ControlParametersTypes.ControlParametersResponse control_response = 101;
  inline bool has_control_response() const;
  inline void clear_control_response();
  static const int kControlResponseFieldNumber = 101;
  inline const ::ndn_message::ControlParametersTypes_ControlParametersResponse& control_response() const;
  inline ::ndn_message::ControlParametersTypes_ControlParametersResponse* mutable_control_response();
  inline ::ndn_message::ControlParametersTypes_ControlParametersResponse* release_control_response();
  inline void set_allocated_control_response(::ndn_message::ControlParametersTypes_ControlParametersResponse* control_response);

  // @@protoc_insertion_point(class_scope:ndn_message.ControlParametersTypes.ControlParametersResponseMessage)
 private:
  inline void set_has_control_response();
  inline void clear_has_control_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ndn_message::ControlParametersTypes_ControlParametersResponse* control_response_;
  friend void  protobuf_AddDesc_control_2dparameters_2eproto();
  friend void protobuf_AssignDesc_control_2dparameters_2eproto();
  friend void protobuf_ShutdownFile_control_2dparameters_2eproto();

  void InitAsDefaultInstance();
  static ControlParametersTypes_ControlParametersResponseMessage* default_instance_;
};
// -------------------------------------------------------------------

class ControlParametersTypes : public ::google::protobuf::Message {
 public:
  ControlParametersTypes();
  virtual ~ControlParametersTypes();

  ControlParametersTypes(const ControlParametersTypes& from);

  inline ControlParametersTypes& operator=(const ControlParametersTypes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ControlParametersTypes& default_instance();

  void Swap(ControlParametersTypes* other);

  // implements Message ----------------------------------------------

  ControlParametersTypes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ControlParametersTypes& from);
  void MergeFrom(const ControlParametersTypes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ControlParametersTypes_Name Name;
  typedef ControlParametersTypes_Strategy Strategy;
  typedef ControlParametersTypes_ControlParameters ControlParameters;
  typedef ControlParametersTypes_ControlParametersResponse ControlParametersResponse;
  typedef ControlParametersTypes_ControlParametersMessage ControlParametersMessage;
  typedef ControlParametersTypes_ControlParametersResponseMessage ControlParametersResponseMessage;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ndn_message.ControlParametersTypes)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_control_2dparameters_2eproto();
  friend void protobuf_AssignDesc_control_2dparameters_2eproto();
  friend void protobuf_ShutdownFile_control_2dparameters_2eproto();

  void InitAsDefaultInstance();
  static ControlParametersTypes* default_instance_;
};
// ===================================================================


// ===================================================================

// ControlParametersTypes_Name

// repeated bytes component = 8;
inline int ControlParametersTypes_Name::component_size() const {
  return component_.size();
}
inline void ControlParametersTypes_Name::clear_component() {
  component_.Clear();
}
inline const ::std::string& ControlParametersTypes_Name::component(int index) const {
  // @@protoc_insertion_point(field_get:ndn_message.ControlParametersTypes.Name.component)
  return component_.Get(index);
}
inline ::std::string* ControlParametersTypes_Name::mutable_component(int index) {
  // @@protoc_insertion_point(field_mutable:ndn_message.ControlParametersTypes.Name.component)
  return component_.Mutable(index);
}
inline void ControlParametersTypes_Name::set_component(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ndn_message.ControlParametersTypes.Name.component)
  component_.Mutable(index)->assign(value);
}
inline void ControlParametersTypes_Name::set_component(int index, const char* value) {
  component_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ndn_message.ControlParametersTypes.Name.component)
}
inline void ControlParametersTypes_Name::set_component(int index, const void* value, size_t size) {
  component_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ndn_message.ControlParametersTypes.Name.component)
}
inline ::std::string* ControlParametersTypes_Name::add_component() {
  return component_.Add();
}
inline void ControlParametersTypes_Name::add_component(const ::std::string& value) {
  component_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ndn_message.ControlParametersTypes.Name.component)
}
inline void ControlParametersTypes_Name::add_component(const char* value) {
  component_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ndn_message.ControlParametersTypes.Name.component)
}
inline void ControlParametersTypes_Name::add_component(const void* value, size_t size) {
  component_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ndn_message.ControlParametersTypes.Name.component)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ControlParametersTypes_Name::component() const {
  // @@protoc_insertion_point(field_list:ndn_message.ControlParametersTypes.Name.component)
  return component_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ControlParametersTypes_Name::mutable_component() {
  // @@protoc_insertion_point(field_mutable_list:ndn_message.ControlParametersTypes.Name.component)
  return &component_;
}

// -------------------------------------------------------------------

// ControlParametersTypes_Strategy

// required .ndn_message.ControlParametersTypes.Name name = 7;
inline bool ControlParametersTypes_Strategy::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ControlParametersTypes_Strategy::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ControlParametersTypes_Strategy::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ControlParametersTypes_Strategy::clear_name() {
  if (name_ != NULL) name_->::ndn_message::ControlParametersTypes_Name::Clear();
  clear_has_name();
}
inline const ::ndn_message::ControlParametersTypes_Name& ControlParametersTypes_Strategy::name() const {
  // @@protoc_insertion_point(field_get:ndn_message.ControlParametersTypes.Strategy.name)
  return name_ != NULL ? *name_ : *default_instance_->name_;
}
inline ::ndn_message::ControlParametersTypes_Name* ControlParametersTypes_Strategy::mutable_name() {
  set_has_name();
  if (name_ == NULL) name_ = new ::ndn_message::ControlParametersTypes_Name;
  // @@protoc_insertion_point(field_mutable:ndn_message.ControlParametersTypes.Strategy.name)
  return name_;
}
inline ::ndn_message::ControlParametersTypes_Name* ControlParametersTypes_Strategy::release_name() {
  clear_has_name();
  ::ndn_message::ControlParametersTypes_Name* temp = name_;
  name_ = NULL;
  return temp;
}
inline void ControlParametersTypes_Strategy::set_allocated_name(::ndn_message::ControlParametersTypes_Name* name) {
  delete name_;
  name_ = name;
  if (name) {
    set_has_name();
  } else {
    clear_has_name();
  }
  // @@protoc_insertion_point(field_set_allocated:ndn_message.ControlParametersTypes.Strategy.name)
}

// -------------------------------------------------------------------

// ControlParametersTypes_ControlParameters

// optional .ndn_message.ControlParametersTypes.Name name = 7;
inline bool ControlParametersTypes_ControlParameters::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ControlParametersTypes_ControlParameters::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ControlParametersTypes_ControlParameters::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ControlParametersTypes_ControlParameters::clear_name() {
  if (name_ != NULL) name_->::ndn_message::ControlParametersTypes_Name::Clear();
  clear_has_name();
}
inline const ::ndn_message::ControlParametersTypes_Name& ControlParametersTypes_ControlParameters::name() const {
  // @@protoc_insertion_point(field_get:ndn_message.ControlParametersTypes.ControlParameters.name)
  return name_ != NULL ? *name_ : *default_instance_->name_;
}
inline ::ndn_message::ControlParametersTypes_Name* ControlParametersTypes_ControlParameters::mutable_name() {
  set_has_name();
  if (name_ == NULL) name_ = new ::ndn_message::ControlParametersTypes_Name;
  // @@protoc_insertion_point(field_mutable:ndn_message.ControlParametersTypes.ControlParameters.name)
  return name_;
}
inline ::ndn_message::ControlParametersTypes_Name* ControlParametersTypes_ControlParameters::release_name() {
  clear_has_name();
  ::ndn_message::ControlParametersTypes_Name* temp = name_;
  name_ = NULL;
  return temp;
}
inline void ControlParametersTypes_ControlParameters::set_allocated_name(::ndn_message::ControlParametersTypes_Name* name) {
  delete name_;
  name_ = name;
  if (name) {
    set_has_name();
  } else {
    clear_has_name();
  }
  // @@protoc_insertion_point(field_set_allocated:ndn_message.ControlParametersTypes.ControlParameters.name)
}

// optional uint64 face_id = 105;
inline bool ControlParametersTypes_ControlParameters::has_face_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ControlParametersTypes_ControlParameters::set_has_face_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ControlParametersTypes_ControlParameters::clear_has_face_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ControlParametersTypes_ControlParameters::clear_face_id() {
  face_id_ = GOOGLE_ULONGLONG(0);
  clear_has_face_id();
}
inline ::google::protobuf::uint64 ControlParametersTypes_ControlParameters::face_id() const {
  // @@protoc_insertion_point(field_get:ndn_message.ControlParametersTypes.ControlParameters.face_id)
  return face_id_;
}
inline void ControlParametersTypes_ControlParameters::set_face_id(::google::protobuf::uint64 value) {
  set_has_face_id();
  face_id_ = value;
  // @@protoc_insertion_point(field_set:ndn_message.ControlParametersTypes.ControlParameters.face_id)
}

// optional string uri = 114;
inline bool ControlParametersTypes_ControlParameters::has_uri() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ControlParametersTypes_ControlParameters::set_has_uri() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ControlParametersTypes_ControlParameters::clear_has_uri() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ControlParametersTypes_ControlParameters::clear_uri() {
  if (uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uri_->clear();
  }
  clear_has_uri();
}
inline const ::std::string& ControlParametersTypes_ControlParameters::uri() const {
  // @@protoc_insertion_point(field_get:ndn_message.ControlParametersTypes.ControlParameters.uri)
  return *uri_;
}
inline void ControlParametersTypes_ControlParameters::set_uri(const ::std::string& value) {
  set_has_uri();
  if (uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uri_ = new ::std::string;
  }
  uri_->assign(value);
  // @@protoc_insertion_point(field_set:ndn_message.ControlParametersTypes.ControlParameters.uri)
}
inline void ControlParametersTypes_ControlParameters::set_uri(const char* value) {
  set_has_uri();
  if (uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uri_ = new ::std::string;
  }
  uri_->assign(value);
  // @@protoc_insertion_point(field_set_char:ndn_message.ControlParametersTypes.ControlParameters.uri)
}
inline void ControlParametersTypes_ControlParameters::set_uri(const char* value, size_t size) {
  set_has_uri();
  if (uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uri_ = new ::std::string;
  }
  uri_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ndn_message.ControlParametersTypes.ControlParameters.uri)
}
inline ::std::string* ControlParametersTypes_ControlParameters::mutable_uri() {
  set_has_uri();
  if (uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uri_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ndn_message.ControlParametersTypes.ControlParameters.uri)
  return uri_;
}
inline ::std::string* ControlParametersTypes_ControlParameters::release_uri() {
  clear_has_uri();
  if (uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = uri_;
    uri_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ControlParametersTypes_ControlParameters::set_allocated_uri(::std::string* uri) {
  if (uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete uri_;
  }
  if (uri) {
    set_has_uri();
    uri_ = uri;
  } else {
    clear_has_uri();
    uri_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ndn_message.ControlParametersTypes.ControlParameters.uri)
}

// optional uint64 local_control_feature = 110;
inline bool ControlParametersTypes_ControlParameters::has_local_control_feature() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ControlParametersTypes_ControlParameters::set_has_local_control_feature() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ControlParametersTypes_ControlParameters::clear_has_local_control_feature() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ControlParametersTypes_ControlParameters::clear_local_control_feature() {
  local_control_feature_ = GOOGLE_ULONGLONG(0);
  clear_has_local_control_feature();
}
inline ::google::protobuf::uint64 ControlParametersTypes_ControlParameters::local_control_feature() const {
  // @@protoc_insertion_point(field_get:ndn_message.ControlParametersTypes.ControlParameters.local_control_feature)
  return local_control_feature_;
}
inline void ControlParametersTypes_ControlParameters::set_local_control_feature(::google::protobuf::uint64 value) {
  set_has_local_control_feature();
  local_control_feature_ = value;
  // @@protoc_insertion_point(field_set:ndn_message.ControlParametersTypes.ControlParameters.local_control_feature)
}

// optional uint64 origin = 111;
inline bool ControlParametersTypes_ControlParameters::has_origin() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ControlParametersTypes_ControlParameters::set_has_origin() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ControlParametersTypes_ControlParameters::clear_has_origin() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ControlParametersTypes_ControlParameters::clear_origin() {
  origin_ = GOOGLE_ULONGLONG(0);
  clear_has_origin();
}
inline ::google::protobuf::uint64 ControlParametersTypes_ControlParameters::origin() const {
  // @@protoc_insertion_point(field_get:ndn_message.ControlParametersTypes.ControlParameters.origin)
  return origin_;
}
inline void ControlParametersTypes_ControlParameters::set_origin(::google::protobuf::uint64 value) {
  set_has_origin();
  origin_ = value;
  // @@protoc_insertion_point(field_set:ndn_message.ControlParametersTypes.ControlParameters.origin)
}

// optional uint64 cost = 106;
inline bool ControlParametersTypes_ControlParameters::has_cost() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ControlParametersTypes_ControlParameters::set_has_cost() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ControlParametersTypes_ControlParameters::clear_has_cost() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ControlParametersTypes_ControlParameters::clear_cost() {
  cost_ = GOOGLE_ULONGLONG(0);
  clear_has_cost();
}
inline ::google::protobuf::uint64 ControlParametersTypes_ControlParameters::cost() const {
  // @@protoc_insertion_point(field_get:ndn_message.ControlParametersTypes.ControlParameters.cost)
  return cost_;
}
inline void ControlParametersTypes_ControlParameters::set_cost(::google::protobuf::uint64 value) {
  set_has_cost();
  cost_ = value;
  // @@protoc_insertion_point(field_set:ndn_message.ControlParametersTypes.ControlParameters.cost)
}

// optional uint64 flags = 108;
inline bool ControlParametersTypes_ControlParameters::has_flags() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ControlParametersTypes_ControlParameters::set_has_flags() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ControlParametersTypes_ControlParameters::clear_has_flags() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ControlParametersTypes_ControlParameters::clear_flags() {
  flags_ = GOOGLE_ULONGLONG(0);
  clear_has_flags();
}
inline ::google::protobuf::uint64 ControlParametersTypes_ControlParameters::flags() const {
  // @@protoc_insertion_point(field_get:ndn_message.ControlParametersTypes.ControlParameters.flags)
  return flags_;
}
inline void ControlParametersTypes_ControlParameters::set_flags(::google::protobuf::uint64 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:ndn_message.ControlParametersTypes.ControlParameters.flags)
}

// optional .ndn_message.ControlParametersTypes.Strategy strategy = 107;
inline bool ControlParametersTypes_ControlParameters::has_strategy() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ControlParametersTypes_ControlParameters::set_has_strategy() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ControlParametersTypes_ControlParameters::clear_has_strategy() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ControlParametersTypes_ControlParameters::clear_strategy() {
  if (strategy_ != NULL) strategy_->::ndn_message::ControlParametersTypes_Strategy::Clear();
  clear_has_strategy();
}
inline const ::ndn_message::ControlParametersTypes_Strategy& ControlParametersTypes_ControlParameters::strategy() const {
  // @@protoc_insertion_point(field_get:ndn_message.ControlParametersTypes.ControlParameters.strategy)
  return strategy_ != NULL ? *strategy_ : *default_instance_->strategy_;
}
inline ::ndn_message::ControlParametersTypes_Strategy* ControlParametersTypes_ControlParameters::mutable_strategy() {
  set_has_strategy();
  if (strategy_ == NULL) strategy_ = new ::ndn_message::ControlParametersTypes_Strategy;
  // @@protoc_insertion_point(field_mutable:ndn_message.ControlParametersTypes.ControlParameters.strategy)
  return strategy_;
}
inline ::ndn_message::ControlParametersTypes_Strategy* ControlParametersTypes_ControlParameters::release_strategy() {
  clear_has_strategy();
  ::ndn_message::ControlParametersTypes_Strategy* temp = strategy_;
  strategy_ = NULL;
  return temp;
}
inline void ControlParametersTypes_ControlParameters::set_allocated_strategy(::ndn_message::ControlParametersTypes_Strategy* strategy) {
  delete strategy_;
  strategy_ = strategy;
  if (strategy) {
    set_has_strategy();
  } else {
    clear_has_strategy();
  }
  // @@protoc_insertion_point(field_set_allocated:ndn_message.ControlParametersTypes.ControlParameters.strategy)
}

// optional uint64 expiration_period = 109;
inline bool ControlParametersTypes_ControlParameters::has_expiration_period() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ControlParametersTypes_ControlParameters::set_has_expiration_period() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ControlParametersTypes_ControlParameters::clear_has_expiration_period() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ControlParametersTypes_ControlParameters::clear_expiration_period() {
  expiration_period_ = GOOGLE_ULONGLONG(0);
  clear_has_expiration_period();
}
inline ::google::protobuf::uint64 ControlParametersTypes_ControlParameters::expiration_period() const {
  // @@protoc_insertion_point(field_get:ndn_message.ControlParametersTypes.ControlParameters.expiration_period)
  return expiration_period_;
}
inline void ControlParametersTypes_ControlParameters::set_expiration_period(::google::protobuf::uint64 value) {
  set_has_expiration_period();
  expiration_period_ = value;
  // @@protoc_insertion_point(field_set:ndn_message.ControlParametersTypes.ControlParameters.expiration_period)
}

// -------------------------------------------------------------------

// ControlParametersTypes_ControlParametersResponse

// required uint64 status_code = 102;
inline bool ControlParametersTypes_ControlParametersResponse::has_status_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ControlParametersTypes_ControlParametersResponse::set_has_status_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ControlParametersTypes_ControlParametersResponse::clear_has_status_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ControlParametersTypes_ControlParametersResponse::clear_status_code() {
  status_code_ = GOOGLE_ULONGLONG(0);
  clear_has_status_code();
}
inline ::google::protobuf::uint64 ControlParametersTypes_ControlParametersResponse::status_code() const {
  // @@protoc_insertion_point(field_get:ndn_message.ControlParametersTypes.ControlParametersResponse.status_code)
  return status_code_;
}
inline void ControlParametersTypes_ControlParametersResponse::set_status_code(::google::protobuf::uint64 value) {
  set_has_status_code();
  status_code_ = value;
  // @@protoc_insertion_point(field_set:ndn_message.ControlParametersTypes.ControlParametersResponse.status_code)
}

// required string status_text = 103;
inline bool ControlParametersTypes_ControlParametersResponse::has_status_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ControlParametersTypes_ControlParametersResponse::set_has_status_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ControlParametersTypes_ControlParametersResponse::clear_has_status_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ControlParametersTypes_ControlParametersResponse::clear_status_text() {
  if (status_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    status_text_->clear();
  }
  clear_has_status_text();
}
inline const ::std::string& ControlParametersTypes_ControlParametersResponse::status_text() const {
  // @@protoc_insertion_point(field_get:ndn_message.ControlParametersTypes.ControlParametersResponse.status_text)
  return *status_text_;
}
inline void ControlParametersTypes_ControlParametersResponse::set_status_text(const ::std::string& value) {
  set_has_status_text();
  if (status_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    status_text_ = new ::std::string;
  }
  status_text_->assign(value);
  // @@protoc_insertion_point(field_set:ndn_message.ControlParametersTypes.ControlParametersResponse.status_text)
}
inline void ControlParametersTypes_ControlParametersResponse::set_status_text(const char* value) {
  set_has_status_text();
  if (status_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    status_text_ = new ::std::string;
  }
  status_text_->assign(value);
  // @@protoc_insertion_point(field_set_char:ndn_message.ControlParametersTypes.ControlParametersResponse.status_text)
}
inline void ControlParametersTypes_ControlParametersResponse::set_status_text(const char* value, size_t size) {
  set_has_status_text();
  if (status_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    status_text_ = new ::std::string;
  }
  status_text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ndn_message.ControlParametersTypes.ControlParametersResponse.status_text)
}
inline ::std::string* ControlParametersTypes_ControlParametersResponse::mutable_status_text() {
  set_has_status_text();
  if (status_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    status_text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ndn_message.ControlParametersTypes.ControlParametersResponse.status_text)
  return status_text_;
}
inline ::std::string* ControlParametersTypes_ControlParametersResponse::release_status_text() {
  clear_has_status_text();
  if (status_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = status_text_;
    status_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ControlParametersTypes_ControlParametersResponse::set_allocated_status_text(::std::string* status_text) {
  if (status_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete status_text_;
  }
  if (status_text) {
    set_has_status_text();
    status_text_ = status_text;
  } else {
    clear_has_status_text();
    status_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ndn_message.ControlParametersTypes.ControlParametersResponse.status_text)
}

// repeated .ndn_message.ControlParametersTypes.ControlParameters control_parameters = 104;
inline int ControlParametersTypes_ControlParametersResponse::control_parameters_size() const {
  return control_parameters_.size();
}
inline void ControlParametersTypes_ControlParametersResponse::clear_control_parameters() {
  control_parameters_.Clear();
}
inline const ::ndn_message::ControlParametersTypes_ControlParameters& ControlParametersTypes_ControlParametersResponse::control_parameters(int index) const {
  // @@protoc_insertion_point(field_get:ndn_message.ControlParametersTypes.ControlParametersResponse.control_parameters)
  return control_parameters_.Get(index);
}
inline ::ndn_message::ControlParametersTypes_ControlParameters* ControlParametersTypes_ControlParametersResponse::mutable_control_parameters(int index) {
  // @@protoc_insertion_point(field_mutable:ndn_message.ControlParametersTypes.ControlParametersResponse.control_parameters)
  return control_parameters_.Mutable(index);
}
inline ::ndn_message::ControlParametersTypes_ControlParameters* ControlParametersTypes_ControlParametersResponse::add_control_parameters() {
  // @@protoc_insertion_point(field_add:ndn_message.ControlParametersTypes.ControlParametersResponse.control_parameters)
  return control_parameters_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ndn_message::ControlParametersTypes_ControlParameters >&
ControlParametersTypes_ControlParametersResponse::control_parameters() const {
  // @@protoc_insertion_point(field_list:ndn_message.ControlParametersTypes.ControlParametersResponse.control_parameters)
  return control_parameters_;
}
inline ::google::protobuf::RepeatedPtrField< ::ndn_message::ControlParametersTypes_ControlParameters >*
ControlParametersTypes_ControlParametersResponse::mutable_control_parameters() {
  // @@protoc_insertion_point(field_mutable_list:ndn_message.ControlParametersTypes.ControlParametersResponse.control_parameters)
  return &control_parameters_;
}

// -------------------------------------------------------------------

// ControlParametersTypes_ControlParametersMessage

// required .ndn_message.ControlParametersTypes.ControlParameters control_parameters = 104;
inline bool ControlParametersTypes_ControlParametersMessage::has_control_parameters() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ControlParametersTypes_ControlParametersMessage::set_has_control_parameters() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ControlParametersTypes_ControlParametersMessage::clear_has_control_parameters() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ControlParametersTypes_ControlParametersMessage::clear_control_parameters() {
  if (control_parameters_ != NULL) control_parameters_->::ndn_message::ControlParametersTypes_ControlParameters::Clear();
  clear_has_control_parameters();
}
inline const ::ndn_message::ControlParametersTypes_ControlParameters& ControlParametersTypes_ControlParametersMessage::control_parameters() const {
  // @@protoc_insertion_point(field_get:ndn_message.ControlParametersTypes.ControlParametersMessage.control_parameters)
  return control_parameters_ != NULL ? *control_parameters_ : *default_instance_->control_parameters_;
}
inline ::ndn_message::ControlParametersTypes_ControlParameters* ControlParametersTypes_ControlParametersMessage::mutable_control_parameters() {
  set_has_control_parameters();
  if (control_parameters_ == NULL) control_parameters_ = new ::ndn_message::ControlParametersTypes_ControlParameters;
  // @@protoc_insertion_point(field_mutable:ndn_message.ControlParametersTypes.ControlParametersMessage.control_parameters)
  return control_parameters_;
}
inline ::ndn_message::ControlParametersTypes_ControlParameters* ControlParametersTypes_ControlParametersMessage::release_control_parameters() {
  clear_has_control_parameters();
  ::ndn_message::ControlParametersTypes_ControlParameters* temp = control_parameters_;
  control_parameters_ = NULL;
  return temp;
}
inline void ControlParametersTypes_ControlParametersMessage::set_allocated_control_parameters(::ndn_message::ControlParametersTypes_ControlParameters* control_parameters) {
  delete control_parameters_;
  control_parameters_ = control_parameters;
  if (control_parameters) {
    set_has_control_parameters();
  } else {
    clear_has_control_parameters();
  }
  // @@protoc_insertion_point(field_set_allocated:ndn_message.ControlParametersTypes.ControlParametersMessage.control_parameters)
}

// -------------------------------------------------------------------

// ControlParametersTypes_ControlParametersResponseMessage

// required .ndn_message.ControlParametersTypes.ControlParametersResponse control_response = 101;
inline bool ControlParametersTypes_ControlParametersResponseMessage::has_control_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ControlParametersTypes_ControlParametersResponseMessage::set_has_control_response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ControlParametersTypes_ControlParametersResponseMessage::clear_has_control_response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ControlParametersTypes_ControlParametersResponseMessage::clear_control_response() {
  if (control_response_ != NULL) control_response_->::ndn_message::ControlParametersTypes_ControlParametersResponse::Clear();
  clear_has_control_response();
}
inline const ::ndn_message::ControlParametersTypes_ControlParametersResponse& ControlParametersTypes_ControlParametersResponseMessage::control_response() const {
  // @@protoc_insertion_point(field_get:ndn_message.ControlParametersTypes.ControlParametersResponseMessage.control_response)
  return control_response_ != NULL ? *control_response_ : *default_instance_->control_response_;
}
inline ::ndn_message::ControlParametersTypes_ControlParametersResponse* ControlParametersTypes_ControlParametersResponseMessage::mutable_control_response() {
  set_has_control_response();
  if (control_response_ == NULL) control_response_ = new ::ndn_message::ControlParametersTypes_ControlParametersResponse;
  // @@protoc_insertion_point(field_mutable:ndn_message.ControlParametersTypes.ControlParametersResponseMessage.control_response)
  return control_response_;
}
inline ::ndn_message::ControlParametersTypes_ControlParametersResponse* ControlParametersTypes_ControlParametersResponseMessage::release_control_response() {
  clear_has_control_response();
  ::ndn_message::ControlParametersTypes_ControlParametersResponse* temp = control_response_;
  control_response_ = NULL;
  return temp;
}
inline void ControlParametersTypes_ControlParametersResponseMessage::set_allocated_control_response(::ndn_message::ControlParametersTypes_ControlParametersResponse* control_response) {
  delete control_response_;
  control_response_ = control_response;
  if (control_response) {
    set_has_control_response();
  } else {
    clear_has_control_response();
  }
  // @@protoc_insertion_point(field_set_allocated:ndn_message.ControlParametersTypes.ControlParametersResponseMessage.control_response)
}

// -------------------------------------------------------------------

// ControlParametersTypes


// @@protoc_insertion_point(namespace_scope)

}  // namespace ndn_message

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_control_2dparameters_2eproto__INCLUDED
