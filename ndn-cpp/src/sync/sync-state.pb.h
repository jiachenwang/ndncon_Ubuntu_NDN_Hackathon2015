// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sync-state.proto

#ifndef PROTOBUF_sync_2dstate_2eproto__INCLUDED
#define PROTOBUF_sync_2dstate_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Sync {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_sync_2dstate_2eproto();
void protobuf_AssignDesc_sync_2dstate_2eproto();
void protobuf_ShutdownFile_sync_2dstate_2eproto();

class SyncState;
class SyncState_SeqNo;
class SyncStateMsg;

enum SyncState_ActionType {
  SyncState_ActionType_UPDATE = 0,
  SyncState_ActionType_DELETE = 1,
  SyncState_ActionType_OTHER = 2
};
bool SyncState_ActionType_IsValid(int value);
const SyncState_ActionType SyncState_ActionType_ActionType_MIN = SyncState_ActionType_UPDATE;
const SyncState_ActionType SyncState_ActionType_ActionType_MAX = SyncState_ActionType_OTHER;
const int SyncState_ActionType_ActionType_ARRAYSIZE = SyncState_ActionType_ActionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SyncState_ActionType_descriptor();
inline const ::std::string& SyncState_ActionType_Name(SyncState_ActionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SyncState_ActionType_descriptor(), value);
}
inline bool SyncState_ActionType_Parse(
    const ::std::string& name, SyncState_ActionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SyncState_ActionType>(
    SyncState_ActionType_descriptor(), name, value);
}
// ===================================================================

class SyncState_SeqNo : public ::google::protobuf::Message {
 public:
  SyncState_SeqNo();
  virtual ~SyncState_SeqNo();

  SyncState_SeqNo(const SyncState_SeqNo& from);

  inline SyncState_SeqNo& operator=(const SyncState_SeqNo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncState_SeqNo& default_instance();

  void Swap(SyncState_SeqNo* other);

  // implements Message ----------------------------------------------

  SyncState_SeqNo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncState_SeqNo& from);
  void MergeFrom(const SyncState_SeqNo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 seq = 1;
  inline bool has_seq() const;
  inline void clear_seq();
  static const int kSeqFieldNumber = 1;
  inline ::google::protobuf::uint64 seq() const;
  inline void set_seq(::google::protobuf::uint64 value);

  // required uint64 session = 2;
  inline bool has_session() const;
  inline void clear_session();
  static const int kSessionFieldNumber = 2;
  inline ::google::protobuf::uint64 session() const;
  inline void set_session(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Sync.SyncState.SeqNo)
 private:
  inline void set_has_seq();
  inline void clear_has_seq();
  inline void set_has_session();
  inline void clear_has_session();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 seq_;
  ::google::protobuf::uint64 session_;
  friend void  protobuf_AddDesc_sync_2dstate_2eproto();
  friend void protobuf_AssignDesc_sync_2dstate_2eproto();
  friend void protobuf_ShutdownFile_sync_2dstate_2eproto();

  void InitAsDefaultInstance();
  static SyncState_SeqNo* default_instance_;
};
// -------------------------------------------------------------------

class SyncState : public ::google::protobuf::Message {
 public:
  SyncState();
  virtual ~SyncState();

  SyncState(const SyncState& from);

  inline SyncState& operator=(const SyncState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncState& default_instance();

  void Swap(SyncState* other);

  // implements Message ----------------------------------------------

  SyncState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncState& from);
  void MergeFrom(const SyncState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef SyncState_SeqNo SeqNo;

  typedef SyncState_ActionType ActionType;
  static const ActionType UPDATE = SyncState_ActionType_UPDATE;
  static const ActionType DELETE = SyncState_ActionType_DELETE;
  static const ActionType OTHER = SyncState_ActionType_OTHER;
  static inline bool ActionType_IsValid(int value) {
    return SyncState_ActionType_IsValid(value);
  }
  static const ActionType ActionType_MIN =
    SyncState_ActionType_ActionType_MIN;
  static const ActionType ActionType_MAX =
    SyncState_ActionType_ActionType_MAX;
  static const int ActionType_ARRAYSIZE =
    SyncState_ActionType_ActionType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ActionType_descriptor() {
    return SyncState_ActionType_descriptor();
  }
  static inline const ::std::string& ActionType_Name(ActionType value) {
    return SyncState_ActionType_Name(value);
  }
  static inline bool ActionType_Parse(const ::std::string& name,
      ActionType* value) {
    return SyncState_ActionType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required .Sync.SyncState.ActionType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::Sync::SyncState_ActionType type() const;
  inline void set_type(::Sync::SyncState_ActionType value);

  // optional .Sync.SyncState.SeqNo seqno = 3;
  inline bool has_seqno() const;
  inline void clear_seqno();
  static const int kSeqnoFieldNumber = 3;
  inline const ::Sync::SyncState_SeqNo& seqno() const;
  inline ::Sync::SyncState_SeqNo* mutable_seqno();
  inline ::Sync::SyncState_SeqNo* release_seqno();
  inline void set_allocated_seqno(::Sync::SyncState_SeqNo* seqno);

  // @@protoc_insertion_point(class_scope:Sync.SyncState)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_seqno();
  inline void clear_has_seqno();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::Sync::SyncState_SeqNo* seqno_;
  int type_;
  friend void  protobuf_AddDesc_sync_2dstate_2eproto();
  friend void protobuf_AssignDesc_sync_2dstate_2eproto();
  friend void protobuf_ShutdownFile_sync_2dstate_2eproto();

  void InitAsDefaultInstance();
  static SyncState* default_instance_;
};
// -------------------------------------------------------------------

class SyncStateMsg : public ::google::protobuf::Message {
 public:
  SyncStateMsg();
  virtual ~SyncStateMsg();

  SyncStateMsg(const SyncStateMsg& from);

  inline SyncStateMsg& operator=(const SyncStateMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncStateMsg& default_instance();

  void Swap(SyncStateMsg* other);

  // implements Message ----------------------------------------------

  SyncStateMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncStateMsg& from);
  void MergeFrom(const SyncStateMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Sync.SyncState ss = 1;
  inline int ss_size() const;
  inline void clear_ss();
  static const int kSsFieldNumber = 1;
  inline const ::Sync::SyncState& ss(int index) const;
  inline ::Sync::SyncState* mutable_ss(int index);
  inline ::Sync::SyncState* add_ss();
  inline const ::google::protobuf::RepeatedPtrField< ::Sync::SyncState >&
      ss() const;
  inline ::google::protobuf::RepeatedPtrField< ::Sync::SyncState >*
      mutable_ss();

  // @@protoc_insertion_point(class_scope:Sync.SyncStateMsg)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Sync::SyncState > ss_;
  friend void  protobuf_AddDesc_sync_2dstate_2eproto();
  friend void protobuf_AssignDesc_sync_2dstate_2eproto();
  friend void protobuf_ShutdownFile_sync_2dstate_2eproto();

  void InitAsDefaultInstance();
  static SyncStateMsg* default_instance_;
};
// ===================================================================


// ===================================================================

// SyncState_SeqNo

// required uint64 seq = 1;
inline bool SyncState_SeqNo::has_seq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncState_SeqNo::set_has_seq() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncState_SeqNo::clear_has_seq() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncState_SeqNo::clear_seq() {
  seq_ = GOOGLE_ULONGLONG(0);
  clear_has_seq();
}
inline ::google::protobuf::uint64 SyncState_SeqNo::seq() const {
  // @@protoc_insertion_point(field_get:Sync.SyncState.SeqNo.seq)
  return seq_;
}
inline void SyncState_SeqNo::set_seq(::google::protobuf::uint64 value) {
  set_has_seq();
  seq_ = value;
  // @@protoc_insertion_point(field_set:Sync.SyncState.SeqNo.seq)
}

// required uint64 session = 2;
inline bool SyncState_SeqNo::has_session() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SyncState_SeqNo::set_has_session() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SyncState_SeqNo::clear_has_session() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SyncState_SeqNo::clear_session() {
  session_ = GOOGLE_ULONGLONG(0);
  clear_has_session();
}
inline ::google::protobuf::uint64 SyncState_SeqNo::session() const {
  // @@protoc_insertion_point(field_get:Sync.SyncState.SeqNo.session)
  return session_;
}
inline void SyncState_SeqNo::set_session(::google::protobuf::uint64 value) {
  set_has_session();
  session_ = value;
  // @@protoc_insertion_point(field_set:Sync.SyncState.SeqNo.session)
}

// -------------------------------------------------------------------

// SyncState

// required string name = 1;
inline bool SyncState::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncState::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncState::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncState::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& SyncState::name() const {
  // @@protoc_insertion_point(field_get:Sync.SyncState.name)
  return *name_;
}
inline void SyncState::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Sync.SyncState.name)
}
inline void SyncState::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Sync.SyncState.name)
}
inline void SyncState::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Sync.SyncState.name)
}
inline ::std::string* SyncState::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Sync.SyncState.name)
  return name_;
}
inline ::std::string* SyncState::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SyncState::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Sync.SyncState.name)
}

// required .Sync.SyncState.ActionType type = 2;
inline bool SyncState::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SyncState::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SyncState::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SyncState::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Sync::SyncState_ActionType SyncState::type() const {
  // @@protoc_insertion_point(field_get:Sync.SyncState.type)
  return static_cast< ::Sync::SyncState_ActionType >(type_);
}
inline void SyncState::set_type(::Sync::SyncState_ActionType value) {
  assert(::Sync::SyncState_ActionType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Sync.SyncState.type)
}

// optional .Sync.SyncState.SeqNo seqno = 3;
inline bool SyncState::has_seqno() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SyncState::set_has_seqno() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SyncState::clear_has_seqno() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SyncState::clear_seqno() {
  if (seqno_ != NULL) seqno_->::Sync::SyncState_SeqNo::Clear();
  clear_has_seqno();
}
inline const ::Sync::SyncState_SeqNo& SyncState::seqno() const {
  // @@protoc_insertion_point(field_get:Sync.SyncState.seqno)
  return seqno_ != NULL ? *seqno_ : *default_instance_->seqno_;
}
inline ::Sync::SyncState_SeqNo* SyncState::mutable_seqno() {
  set_has_seqno();
  if (seqno_ == NULL) seqno_ = new ::Sync::SyncState_SeqNo;
  // @@protoc_insertion_point(field_mutable:Sync.SyncState.seqno)
  return seqno_;
}
inline ::Sync::SyncState_SeqNo* SyncState::release_seqno() {
  clear_has_seqno();
  ::Sync::SyncState_SeqNo* temp = seqno_;
  seqno_ = NULL;
  return temp;
}
inline void SyncState::set_allocated_seqno(::Sync::SyncState_SeqNo* seqno) {
  delete seqno_;
  seqno_ = seqno;
  if (seqno) {
    set_has_seqno();
  } else {
    clear_has_seqno();
  }
  // @@protoc_insertion_point(field_set_allocated:Sync.SyncState.seqno)
}

// -------------------------------------------------------------------

// SyncStateMsg

// repeated .Sync.SyncState ss = 1;
inline int SyncStateMsg::ss_size() const {
  return ss_.size();
}
inline void SyncStateMsg::clear_ss() {
  ss_.Clear();
}
inline const ::Sync::SyncState& SyncStateMsg::ss(int index) const {
  // @@protoc_insertion_point(field_get:Sync.SyncStateMsg.ss)
  return ss_.Get(index);
}
inline ::Sync::SyncState* SyncStateMsg::mutable_ss(int index) {
  // @@protoc_insertion_point(field_mutable:Sync.SyncStateMsg.ss)
  return ss_.Mutable(index);
}
inline ::Sync::SyncState* SyncStateMsg::add_ss() {
  // @@protoc_insertion_point(field_add:Sync.SyncStateMsg.ss)
  return ss_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Sync::SyncState >&
SyncStateMsg::ss() const {
  // @@protoc_insertion_point(field_list:Sync.SyncStateMsg.ss)
  return ss_;
}
inline ::google::protobuf::RepeatedPtrField< ::Sync::SyncState >*
SyncStateMsg::mutable_ss() {
  // @@protoc_insertion_point(field_mutable_list:Sync.SyncStateMsg.ss)
  return &ss_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Sync

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Sync::SyncState_ActionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Sync::SyncState_ActionType>() {
  return ::Sync::SyncState_ActionType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sync_2dstate_2eproto__INCLUDED
